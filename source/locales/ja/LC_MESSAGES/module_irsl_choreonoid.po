# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, IRSL-tut
# This file is distributed under the same license as the IRSL python modules
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IRSL python modules \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-28 09:32+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../module_irsl_choreonoid.rst:3
msgid "Modules in irsl_choreonoid"
msgstr "irsl_choreonoid モジュール"

#: ../../module_irsl_choreonoid.rst:5
msgid "https://github.com/IRSL-tut/irsl_choreonoid"
msgstr ""

#: ../../module_irsl_choreonoid.rst:9
msgid "module irsl_choreonoid.cnoid_util"
msgstr "irsl_choreonoid.cnoid_util"

#: ../../module_irsl_choreonoid.rst:11
msgid ""
"https://github.com/IRSL-"
"tut/irsl_choreonoid/blob/main/python/irsl_choreonoid/cnoid_util.py"
msgstr ""

#: irsl_choreonoid.cnoid_util.load_script:1 of
msgid "Loading a script file"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.__init__
#: irsl_choreonoid.RobotBuilder.RobotBuilder.addShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.addShapes
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createJointShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createLink
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createLinkFromShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createRootLink
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createVisualizedLinkShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.exportBody
#: irsl_choreonoid.RobotBuilder.RobotBuilder.exportURDF
#: irsl_choreonoid.RobotBuilder.RobotBuilder.loadMesh
#: irsl_choreonoid.RobotBuilder.RobotBuilder.loadScene
#: irsl_choreonoid.RobotBuilder.RobotBuilder.make3DAxis
#: irsl_choreonoid.RobotBuilder.RobotBuilder.make3DAxisBox
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeBox
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCapsule
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCone
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCoords
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCross
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCylinder
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeElevationGrid
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeExtrusion
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeLineAlignedShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeSphere
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeTorus
#: irsl_choreonoid.RobotBuilder.RobotBuilder.newRobot
#: irsl_choreonoid.RobotBuilder.RobotBuilder.removeShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.removeShapes
#: irsl_choreonoid.cnoid_base.addSimulator
#: irsl_choreonoid.cnoid_base.cameraPositionLookingAt
#: irsl_choreonoid.cnoid_base.cameraPositionLookingFor
#: irsl_choreonoid.cnoid_base.currentSceneView
#: irsl_choreonoid.cnoid_base.currentSceneWidget
#: irsl_choreonoid.cnoid_base.disableGrid irsl_choreonoid.cnoid_base.enableGrid
#: irsl_choreonoid.cnoid_base.findBodyItem irsl_choreonoid.cnoid_base.findItem
#: irsl_choreonoid.cnoid_base.findItems
#: irsl_choreonoid.cnoid_base.findItemsByClass
#: irsl_choreonoid.cnoid_base.findItemsByName
#: irsl_choreonoid.cnoid_base.findItemsByQuery
#: irsl_choreonoid.cnoid_base.getCameraCoords
#: irsl_choreonoid.cnoid_base.getCameraCoordsParam
#: irsl_choreonoid.cnoid_base.getOrAddWorld
#: irsl_choreonoid.cnoid_base.loadProject
#: irsl_choreonoid.cnoid_base.loadRobotItem
#: irsl_choreonoid.cnoid_base.projectPoints
#: irsl_choreonoid.cnoid_base.removeItem
#: irsl_choreonoid.cnoid_base.saveImageOfScene
#: irsl_choreonoid.cnoid_base.setBackgroundColor
#: irsl_choreonoid.cnoid_base.setCameraCoords
#: irsl_choreonoid.cnoid_base.setCameraCoordsParam
#: irsl_choreonoid.cnoid_base.setCameraMatrix
#: irsl_choreonoid.cnoid_base.unprojectPoints
#: irsl_choreonoid.cnoid_util.castValueNode
#: irsl_choreonoid.cnoid_util.cnoidPosition
#: irsl_choreonoid.cnoid_util.cnoidRotation
#: irsl_choreonoid.cnoid_util.cnoidTranslation
#: irsl_choreonoid.cnoid_util.convertBodyFileToMeshFile
#: irsl_choreonoid.cnoid_util.dictToMapping
#: irsl_choreonoid.cnoid_util.exportBody
#: irsl_choreonoid.cnoid_util.exportBodyAsMesh
#: irsl_choreonoid.cnoid_util.exportURDF irsl_choreonoid.cnoid_util.fv
#: irsl_choreonoid.cnoid_util.isInChoreonoid
#: irsl_choreonoid.cnoid_util.listToListing
#: irsl_choreonoid.cnoid_util.listingToList
#: irsl_choreonoid.cnoid_util.loadRobot irsl_choreonoid.cnoid_util.load_script
#: irsl_choreonoid.cnoid_util.mappingToDict irsl_choreonoid.cnoid_util.parseURL
#: irsl_choreonoid.draw_coords.DrawCoordsList.__init__
#: irsl_choreonoid.draw_coords.DrawCoordsList.addCoords
#: irsl_choreonoid.draw_coords.DrawCoordsList.addCross
#: irsl_choreonoid.draw_coords.DrawCoordsList.addPoint
#: irsl_choreonoid.draw_coords.DrawCoordsList.clear
#: irsl_choreonoid.draw_coords.DrawCoordsList.flush
#: irsl_choreonoid.draw_coords.DrawCoordsList.getOrigin
#: irsl_choreonoid.draw_coords.DrawCoordsList.setLineWidth
#: irsl_choreonoid.draw_coords.DrawCoordsList.setOrigin
#: irsl_choreonoid.draw_coords.DrawCoordsListWrapped.__init__
#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.__init__
#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.addObjects
#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.addPyObject
#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.clear
#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.flush
#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.removeObjects
#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.removePyObject
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.__init__
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.locate
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.move_to
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.newcoords
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient_with_matrix
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate_with_matrix
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.setUpdateCallback
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.transform
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.translate
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.updateTarget
#: irsl_choreonoid.make_shapes.addUriToShape
#: irsl_choreonoid.make_shapes.exportMesh
#: irsl_choreonoid.make_shapes.exportScene
#: irsl_choreonoid.make_shapes.extractDrawables
#: irsl_choreonoid.make_shapes.extractPlots
#: irsl_choreonoid.make_shapes.extractShapes
#: irsl_choreonoid.make_shapes.loadMesh irsl_choreonoid.make_shapes.loadScene
#: irsl_choreonoid.make_shapes.make3DAxis
#: irsl_choreonoid.make_shapes.make3DAxisBox
#: irsl_choreonoid.make_shapes.makeBox
#: irsl_choreonoid.make_shapes.makeBoxFromBoundingBox
#: irsl_choreonoid.make_shapes.makeCapsule irsl_choreonoid.make_shapes.makeCone
#: irsl_choreonoid.make_shapes.makeCoords irsl_choreonoid.make_shapes.makeCross
#: irsl_choreonoid.make_shapes.makeCylinder
#: irsl_choreonoid.make_shapes.makeElevationGrid
#: irsl_choreonoid.make_shapes.makeExtrusion
#: irsl_choreonoid.make_shapes.makeLineAlignedShape
#: irsl_choreonoid.make_shapes.makeLines irsl_choreonoid.make_shapes.makePoints
#: irsl_choreonoid.make_shapes.makeSphere
#: irsl_choreonoid.make_shapes.makeTetrahedron
#: irsl_choreonoid.make_shapes.makeText irsl_choreonoid.make_shapes.makeTorus
#: irsl_choreonoid.robot_util.IKWrapper.__init__
#: irsl_choreonoid.robot_util.IKWrapper.addNoise
#: irsl_choreonoid.robot_util.IKWrapper.angleVector
#: irsl_choreonoid.robot_util.IKWrapper.currentAngleVector
#: irsl_choreonoid.robot_util.IKWrapper.flush
#: irsl_choreonoid.robot_util.IKWrapper.getEndEffector
#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics
#: irsl_choreonoid.robot_util.IKWrapper.resetJointWeights
#: irsl_choreonoid.robot_util.IKWrapper.resetPose
#: irsl_choreonoid.robot_util.IKWrapper.rootCoords
#: irsl_choreonoid.robot_util.IKWrapper.setJoints
#: irsl_choreonoid.robot_util.IKWrapper.updateDefault
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.angleVector
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.inverseKinematics
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.jointAngle
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.move
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.moveCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rename
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rotate
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.setAngleMap
#: irsl_choreonoid.robot_util.RobotModelWrapped.__init__
#: irsl_choreonoid.robot_util.RobotModelWrapped.angleVector
#: irsl_choreonoid.robot_util.RobotModelWrapped.calcMinimumDuration
#: irsl_choreonoid.robot_util.RobotModelWrapped.device
#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.getEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.getLimb
#: irsl_choreonoid.robot_util.RobotModelWrapped.inverseKinematics
#: irsl_choreonoid.robot_util.RobotModelWrapped.joint
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointAngle
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.keepJointLimit
#: irsl_choreonoid.robot_util.RobotModelWrapped.link
#: irsl_choreonoid.robot_util.RobotModelWrapped.linkCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.registerEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.registerNamedPose
#: irsl_choreonoid.robot_util.RobotModelWrapped.rootCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.setAngleMap
#: irsl_choreonoid.robot_util.RobotModelWrapped.setMode
#: irsl_choreonoid.robot_util.RobotModelWrapped.setNamedPose
#: irsl_choreonoid.robot_util.make_coordinates
#: irsl_choreonoid.robot_util.make_coords_map
#: irsl_choreonoid.robot_util.make_translation_rotation of
msgid "Parameters"
msgstr ""

#: irsl_choreonoid.cnoid_util.load_script:3 of
msgid "URL [ URL is like 'scheme://netloc/xxx/yyy/zzz' ]"
msgstr ""

#: irsl_choreonoid.cnoid_util.parseURL:1 of
msgid "Parsing URL with IRSL original scheme"
msgstr ""

#: irsl_choreonoid.cnoid_util.parseURL:3 of
msgid "URL"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.body
#: irsl_choreonoid.RobotBuilder.RobotBuilder.bodyItem
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createJointShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createLink
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createLinkFromShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createRootLink
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createVisualizedLinkShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.draw
#: irsl_choreonoid.RobotBuilder.RobotBuilder.loadMesh
#: irsl_choreonoid.RobotBuilder.RobotBuilder.loadScene
#: irsl_choreonoid.RobotBuilder.RobotBuilder.make3DAxis
#: irsl_choreonoid.RobotBuilder.RobotBuilder.make3DAxisBox
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeBox
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCapsule
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCone
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCoords
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCross
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCylinder
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeElevationGrid
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeExtrusion
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeLineAlignedShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeSphere
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeTorus
#: irsl_choreonoid.RobotBuilder.RobotBuilder.viewInfo
#: irsl_choreonoid.cnoid_base.addSimulator
#: irsl_choreonoid.cnoid_base.cameraPositionLookingAt
#: irsl_choreonoid.cnoid_base.cameraPositionLookingFor
#: irsl_choreonoid.cnoid_base.currentSceneView
#: irsl_choreonoid.cnoid_base.currentSceneWidget
#: irsl_choreonoid.cnoid_base.findBodyItem irsl_choreonoid.cnoid_base.findItem
#: irsl_choreonoid.cnoid_base.findItems
#: irsl_choreonoid.cnoid_base.findItemsByClass
#: irsl_choreonoid.cnoid_base.findItemsByName
#: irsl_choreonoid.cnoid_base.findItemsByQuery
#: irsl_choreonoid.cnoid_base.getCameraCoords
#: irsl_choreonoid.cnoid_base.getCameraCoordsParam
#: irsl_choreonoid.cnoid_base.getOrAddWorld
#: irsl_choreonoid.cnoid_base.loadRobotItem
#: irsl_choreonoid.cnoid_base.projectPoints
#: irsl_choreonoid.cnoid_base.unprojectPoints
#: irsl_choreonoid.cnoid_util.castValueNode
#: irsl_choreonoid.cnoid_util.cnoidPosition
#: irsl_choreonoid.cnoid_util.cnoidRotation
#: irsl_choreonoid.cnoid_util.cnoidTranslation
#: irsl_choreonoid.cnoid_util.dictToMapping irsl_choreonoid.cnoid_util.fv
#: irsl_choreonoid.cnoid_util.isInChoreonoid
#: irsl_choreonoid.cnoid_util.listToListing
#: irsl_choreonoid.cnoid_util.listingToList
#: irsl_choreonoid.cnoid_util.loadRobot
#: irsl_choreonoid.cnoid_util.mappingToDict irsl_choreonoid.cnoid_util.parseURL
#: irsl_choreonoid.draw_coords.DrawCoordsList.T
#: irsl_choreonoid.draw_coords.DrawCoordsList.addCoords
#: irsl_choreonoid.draw_coords.DrawCoordsList.addCross
#: irsl_choreonoid.draw_coords.DrawCoordsList.addPoint
#: irsl_choreonoid.draw_coords.DrawCoordsList.count
#: irsl_choreonoid.draw_coords.DrawCoordsList.getOrigin
#: irsl_choreonoid.draw_coords.DrawCoordsList.interface
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.locate
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.move_to
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.newcoords
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.object
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient_with_matrix
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate_with_matrix
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.target
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.transform
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.translate
#: irsl_choreonoid.make_shapes.extractDrawables
#: irsl_choreonoid.make_shapes.extractPlots
#: irsl_choreonoid.make_shapes.extractShapes
#: irsl_choreonoid.make_shapes.loadMesh irsl_choreonoid.make_shapes.loadScene
#: irsl_choreonoid.make_shapes.make3DAxis
#: irsl_choreonoid.make_shapes.make3DAxisBox
#: irsl_choreonoid.make_shapes.makeBox irsl_choreonoid.make_shapes.makeCapsule
#: irsl_choreonoid.make_shapes.makeCone irsl_choreonoid.make_shapes.makeCoords
#: irsl_choreonoid.make_shapes.makeCross
#: irsl_choreonoid.make_shapes.makeCylinder
#: irsl_choreonoid.make_shapes.makeElevationGrid
#: irsl_choreonoid.make_shapes.makeExtrusion
#: irsl_choreonoid.make_shapes.makeLineAlignedShape
#: irsl_choreonoid.make_shapes.makeLines irsl_choreonoid.make_shapes.makePoints
#: irsl_choreonoid.make_shapes.makeSphere
#: irsl_choreonoid.make_shapes.makeTetrahedron
#: irsl_choreonoid.make_shapes.makeText irsl_choreonoid.make_shapes.makeTorus
#: irsl_choreonoid.robot_util.IKWrapper.angleVector
#: irsl_choreonoid.robot_util.IKWrapper.currentAngleVector
#: irsl_choreonoid.robot_util.IKWrapper.current_joints
#: irsl_choreonoid.robot_util.IKWrapper.default_coords
#: irsl_choreonoid.robot_util.IKWrapper.default_joints
#: irsl_choreonoid.robot_util.IKWrapper.default_pose
#: irsl_choreonoid.robot_util.IKWrapper.endEffector
#: irsl_choreonoid.robot_util.IKWrapper.getEndEffector
#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics
#: irsl_choreonoid.robot_util.IKWrapper.joint_weights
#: irsl_choreonoid.robot_util.IKWrapper.resetPose
#: irsl_choreonoid.robot_util.IKWrapper.robot
#: irsl_choreonoid.robot_util.IKWrapper.rootCoords
#: irsl_choreonoid.robot_util.IKWrapper.tip_link
#: irsl_choreonoid.robot_util.IKWrapper.tip_to_eef
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.IK
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.angleMap
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.angleVector
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.endEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.inverseKinematics
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.jointAngle
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.move
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.moveCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rename
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rotate
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.setAngleMap
#: irsl_choreonoid.robot_util.RobotModelWrapped.angleVector
#: irsl_choreonoid.robot_util.RobotModelWrapped.arm
#: irsl_choreonoid.robot_util.RobotModelWrapped.armEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.calcMinimumDuration
#: irsl_choreonoid.robot_util.RobotModelWrapped.device
#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceList
#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceNames
#: irsl_choreonoid.robot_util.RobotModelWrapped.getEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.getLimb
#: irsl_choreonoid.robot_util.RobotModelWrapped.head
#: irsl_choreonoid.robot_util.RobotModelWrapped.headEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.inverseKinematics
#: irsl_choreonoid.robot_util.RobotModelWrapped.joint
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointAngle
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointList
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointNames
#: irsl_choreonoid.robot_util.RobotModelWrapped.keepJointLimit
#: irsl_choreonoid.robot_util.RobotModelWrapped.larm
#: irsl_choreonoid.robot_util.RobotModelWrapped.larmEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.link
#: irsl_choreonoid.robot_util.RobotModelWrapped.linkCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.linkList
#: irsl_choreonoid.robot_util.RobotModelWrapped.linkNames
#: irsl_choreonoid.robot_util.RobotModelWrapped.lleg
#: irsl_choreonoid.robot_util.RobotModelWrapped.llegEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.rarm
#: irsl_choreonoid.robot_util.RobotModelWrapped.rarmEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.rleg
#: irsl_choreonoid.robot_util.RobotModelWrapped.rlegEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.robot
#: irsl_choreonoid.robot_util.RobotModelWrapped.rootCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.setAngleMap
#: irsl_choreonoid.robot_util.RobotModelWrapped.setMode
#: irsl_choreonoid.robot_util.RobotModelWrapped.torso
#: irsl_choreonoid.robot_util.RobotModelWrapped.torsoEndEffector
#: irsl_choreonoid.robot_util.make_coordinates
#: irsl_choreonoid.robot_util.make_coords_map
#: irsl_choreonoid.robot_util.make_translation_rotation of
msgid "Returns"
msgstr ""

#: irsl_choreonoid.cnoid_util.parseURL:6 of
msgid "Absolute path"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.body
#: irsl_choreonoid.RobotBuilder.RobotBuilder.bodyItem
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createJointShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createLink
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createLinkFromShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createRootLink
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createVisualizedLinkShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.draw
#: irsl_choreonoid.RobotBuilder.RobotBuilder.loadMesh
#: irsl_choreonoid.RobotBuilder.RobotBuilder.loadScene
#: irsl_choreonoid.RobotBuilder.RobotBuilder.make3DAxis
#: irsl_choreonoid.RobotBuilder.RobotBuilder.make3DAxisBox
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeBox
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCapsule
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCone
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCoords
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCross
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCylinder
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeElevationGrid
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeExtrusion
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeLineAlignedShape
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeSphere
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeTorus
#: irsl_choreonoid.RobotBuilder.RobotBuilder.viewInfo
#: irsl_choreonoid.cnoid_base.addSimulator
#: irsl_choreonoid.cnoid_base.cameraPositionLookingAt
#: irsl_choreonoid.cnoid_base.cameraPositionLookingFor
#: irsl_choreonoid.cnoid_base.currentSceneView
#: irsl_choreonoid.cnoid_base.currentSceneWidget
#: irsl_choreonoid.cnoid_base.findBodyItem irsl_choreonoid.cnoid_base.findItem
#: irsl_choreonoid.cnoid_base.findItems
#: irsl_choreonoid.cnoid_base.findItemsByClass
#: irsl_choreonoid.cnoid_base.findItemsByName
#: irsl_choreonoid.cnoid_base.findItemsByQuery
#: irsl_choreonoid.cnoid_base.getCameraCoords
#: irsl_choreonoid.cnoid_base.getCameraCoordsParam
#: irsl_choreonoid.cnoid_base.getOrAddWorld
#: irsl_choreonoid.cnoid_base.loadRobotItem
#: irsl_choreonoid.cnoid_base.projectPoints
#: irsl_choreonoid.cnoid_base.unprojectPoints
#: irsl_choreonoid.cnoid_util.castValueNode
#: irsl_choreonoid.cnoid_util.cnoidPosition
#: irsl_choreonoid.cnoid_util.cnoidRotation
#: irsl_choreonoid.cnoid_util.cnoidTranslation
#: irsl_choreonoid.cnoid_util.dictToMapping irsl_choreonoid.cnoid_util.fv
#: irsl_choreonoid.cnoid_util.isInChoreonoid
#: irsl_choreonoid.cnoid_util.listToListing
#: irsl_choreonoid.cnoid_util.listingToList
#: irsl_choreonoid.cnoid_util.loadRobot
#: irsl_choreonoid.cnoid_util.mappingToDict irsl_choreonoid.cnoid_util.parseURL
#: irsl_choreonoid.draw_coords.DrawCoordsList.T
#: irsl_choreonoid.draw_coords.DrawCoordsList.addCoords
#: irsl_choreonoid.draw_coords.DrawCoordsList.addCross
#: irsl_choreonoid.draw_coords.DrawCoordsList.addPoint
#: irsl_choreonoid.draw_coords.DrawCoordsList.count
#: irsl_choreonoid.draw_coords.DrawCoordsList.getOrigin
#: irsl_choreonoid.draw_coords.DrawCoordsList.interface
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.locate
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.move_to
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.newcoords
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.object
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient_with_matrix
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate_with_matrix
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.target
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.transform
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.translate
#: irsl_choreonoid.make_shapes.extractDrawables
#: irsl_choreonoid.make_shapes.extractPlots
#: irsl_choreonoid.make_shapes.extractShapes
#: irsl_choreonoid.make_shapes.loadMesh irsl_choreonoid.make_shapes.loadScene
#: irsl_choreonoid.make_shapes.make3DAxis
#: irsl_choreonoid.make_shapes.make3DAxisBox
#: irsl_choreonoid.make_shapes.makeBox irsl_choreonoid.make_shapes.makeCapsule
#: irsl_choreonoid.make_shapes.makeCone irsl_choreonoid.make_shapes.makeCoords
#: irsl_choreonoid.make_shapes.makeCross
#: irsl_choreonoid.make_shapes.makeCylinder
#: irsl_choreonoid.make_shapes.makeElevationGrid
#: irsl_choreonoid.make_shapes.makeExtrusion
#: irsl_choreonoid.make_shapes.makeLineAlignedShape
#: irsl_choreonoid.make_shapes.makeLines irsl_choreonoid.make_shapes.makePoints
#: irsl_choreonoid.make_shapes.makeSphere
#: irsl_choreonoid.make_shapes.makeTetrahedron
#: irsl_choreonoid.make_shapes.makeText irsl_choreonoid.make_shapes.makeTorus
#: irsl_choreonoid.robot_util.IKWrapper.angleVector
#: irsl_choreonoid.robot_util.IKWrapper.currentAngleVector
#: irsl_choreonoid.robot_util.IKWrapper.current_joints
#: irsl_choreonoid.robot_util.IKWrapper.default_coords
#: irsl_choreonoid.robot_util.IKWrapper.default_joints
#: irsl_choreonoid.robot_util.IKWrapper.default_pose
#: irsl_choreonoid.robot_util.IKWrapper.endEffector
#: irsl_choreonoid.robot_util.IKWrapper.getEndEffector
#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics
#: irsl_choreonoid.robot_util.IKWrapper.joint_weights
#: irsl_choreonoid.robot_util.IKWrapper.resetPose
#: irsl_choreonoid.robot_util.IKWrapper.robot
#: irsl_choreonoid.robot_util.IKWrapper.rootCoords
#: irsl_choreonoid.robot_util.IKWrapper.tip_link
#: irsl_choreonoid.robot_util.IKWrapper.tip_to_eef
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.IK
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.angleMap
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.angleVector
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.endEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.inverseKinematics
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.jointAngle
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.move
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.moveCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rename
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rotate
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.setAngleMap
#: irsl_choreonoid.robot_util.RobotModelWrapped.angleVector
#: irsl_choreonoid.robot_util.RobotModelWrapped.arm
#: irsl_choreonoid.robot_util.RobotModelWrapped.armEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.calcMinimumDuration
#: irsl_choreonoid.robot_util.RobotModelWrapped.device
#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceList
#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceNames
#: irsl_choreonoid.robot_util.RobotModelWrapped.getEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.getLimb
#: irsl_choreonoid.robot_util.RobotModelWrapped.head
#: irsl_choreonoid.robot_util.RobotModelWrapped.headEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.inverseKinematics
#: irsl_choreonoid.robot_util.RobotModelWrapped.joint
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointAngle
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointList
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointNames
#: irsl_choreonoid.robot_util.RobotModelWrapped.keepJointLimit
#: irsl_choreonoid.robot_util.RobotModelWrapped.larm
#: irsl_choreonoid.robot_util.RobotModelWrapped.larmEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.link
#: irsl_choreonoid.robot_util.RobotModelWrapped.linkCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.linkList
#: irsl_choreonoid.robot_util.RobotModelWrapped.linkNames
#: irsl_choreonoid.robot_util.RobotModelWrapped.lleg
#: irsl_choreonoid.robot_util.RobotModelWrapped.llegEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.rarm
#: irsl_choreonoid.robot_util.RobotModelWrapped.rarmEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.rleg
#: irsl_choreonoid.robot_util.RobotModelWrapped.rlegEndEffector
#: irsl_choreonoid.robot_util.RobotModelWrapped.robot
#: irsl_choreonoid.robot_util.RobotModelWrapped.rootCoords
#: irsl_choreonoid.robot_util.RobotModelWrapped.setAngleMap
#: irsl_choreonoid.robot_util.RobotModelWrapped.setMode
#: irsl_choreonoid.robot_util.RobotModelWrapped.torso
#: irsl_choreonoid.robot_util.RobotModelWrapped.torsoEndEffector
#: irsl_choreonoid.robot_util.make_coordinates
#: irsl_choreonoid.robot_util.make_coords_map
#: irsl_choreonoid.robot_util.make_translation_rotation of
msgid "Return type"
msgstr ""

#: irsl_choreonoid.cnoid_util.parseURL
#: irsl_choreonoid.robot_util.IKWrapper.setJoints
#: irsl_choreonoid.robot_util.RobotModelWrapped.getLimb
#: irsl_choreonoid.robot_util.make_coordinates of
msgid "Raises"
msgstr ""

#: irsl_choreonoid.cnoid_util.parseURL:9 of
msgid "Unknown scheme or netloc is passed"
msgstr ""

#: irsl_choreonoid.cnoid_util.fv:14 irsl_choreonoid.cnoid_util.parseURL:12
#: irsl_choreonoid.robot_util.make_coordinates:12
#: irsl_choreonoid.robot_util.make_coords_map:10 of
msgid "Examples"
msgstr ""

#: irsl_choreonoid.cnoid_util.parseURL:28 of
msgid "Note: URL is like 'scheme://netloc/xxx/yyy/zzz'"
msgstr ""

#: irsl_choreonoid.cnoid_util.parseURL:31 of
msgid "Implemented scheme is 'choreonoid', 'env', 'file'"
msgstr ""

#: irsl_choreonoid.cnoid_util.loadRobot:1 of
msgid "Loading robot model (.body, .vrml, .urdf??)"
msgstr ""

#: irsl_choreonoid.cnoid_util.loadRobot:3 of
msgid "filename of robot-model"
msgstr ""

#: irsl_choreonoid.cnoid_util.loadRobot:6 of
msgid "instance of cnoid.Body.Body"
msgstr ""

#: irsl_choreonoid.cnoid_util.exportBody:1 of
msgid "Exporting .body file from an instance of cnoid.Body.Body"
msgstr ""

#: irsl_choreonoid.cnoid_util.exportBody:7 of
msgid ""
"0; EmbedModels, 1; LinkToOriginalModelFiles, 2; ReplaceWithStdSceneFiles,"
" 3; ReplaceWithObjModelFiles"
msgstr ""

#: irsl_choreonoid.cnoid_util.exportBody:9 of
msgid "Add URI for exporting mesh files"
msgstr ""

#: irsl_choreonoid.cnoid_util.exportBody:11 of
msgid "Using with fileUri, if True, all shapes will be exported as a file."
msgstr ""

#: irsl_choreonoid.cnoid_util.exportBody:13 of
msgid ""
"If True, links with mass==1.0 and inertia is identity is set small mass-"
"parameter (they may loaded without mass parameter)"
msgstr ""

#: irsl_choreonoid.cnoid_util.exportURDF:1 of
msgid "Exporting .urdf file from an instance of cnoid.Body.Body"
msgstr ""

#: irsl_choreonoid.cnoid_util.exportBodyAsMesh:1 of
msgid "Exporting a mesh file converted from an instance of cnoid.Body.Body"
msgstr ""

#: irsl_choreonoid.cnoid_util.convertBodyFileToMeshFile:3
#: irsl_choreonoid.cnoid_util.exportBodyAsMesh:3 of
msgid "Name of output file"
msgstr ""

#: irsl_choreonoid.cnoid_util.exportBodyAsMesh:5 of
msgid "Robot model to be exported"
msgstr ""

#: irsl_choreonoid.cnoid_util.exportBodyAsMesh:13 of
msgid "Passing to irsl_choreonoid.makeshapes.exportMesh"
msgstr ""

#: irsl_choreonoid.cnoid_util.convertBodyFileToMeshFile:1 of
msgid "Converting a mesh file to a body file"
msgstr ""

#: irsl_choreonoid.cnoid_util.convertBodyFileToMeshFile:5 of
msgid "Name of input file"
msgstr ""

#: irsl_choreonoid.cnoid_util.convertBodyFileToMeshFile:7 of
msgid "exportBodyAsMesh"
msgstr ""

#: irsl_choreonoid.cnoid_util.castValueNode:1 of
msgid "Casting cnoid.Util.ValueNode type to python primitive type"
msgstr ""

#: irsl_choreonoid.cnoid_util.castValueNode:3 of
msgid "ValueNode"
msgstr ""

#: irsl_choreonoid.cnoid_util.castValueNode:6 of
msgid "Instance of python primitive type"
msgstr ""

#: irsl_choreonoid.cnoid_util.mappingToDict:1 of
msgid "Converting cnoid.Util.Mapping to dict"
msgstr ""

#: irsl_choreonoid.cnoid_util.mappingToDict:3 of
msgid "Instance of mapping to be converted"
msgstr ""

#: irsl_choreonoid.cnoid_util.mappingToDict:6 of
msgid "Converted dictionary"
msgstr ""

#: irsl_choreonoid.cnoid_util.listingToList:1 of
msgid "Converting cnoid.Util.Listing to list"
msgstr ""

#: irsl_choreonoid.cnoid_util.listingToList:3 of
msgid "Instance of listing to be converted"
msgstr ""

#: irsl_choreonoid.cnoid_util.listingToList:6 of
msgid "Converted list"
msgstr ""

#: irsl_choreonoid.cnoid_util.dictToMapping:1 of
msgid "Converting dict to cnoid.Util.Mapping"
msgstr ""

#: irsl_choreonoid.cnoid_util.dictToMapping:3 of
msgid "Dict to be converted"
msgstr ""

#: irsl_choreonoid.cnoid_util.dictToMapping:6
#: irsl_choreonoid.cnoid_util.listToListing:6 of
msgid "Converted mapping"
msgstr ""

#: irsl_choreonoid.cnoid_util.listToListing:1 of
msgid "Converting list to cnoid.Util.Mapping"
msgstr ""

#: irsl_choreonoid.cnoid_util.listToListing:3 of
msgid "List to be converted"
msgstr ""

#: irsl_choreonoid.cnoid_util.cnoidPosition:1 of
msgid "Concatnating translation part and rotation part"
msgstr ""

#: irsl_choreonoid.cnoid_util.cnoidPosition:3 of
msgid "1x3 vector"
msgstr ""

#: irsl_choreonoid.cnoid_util.cnoidPosition:5 of
msgid "3x3 matrix"
msgstr ""

#: irsl_choreonoid.cnoid_util.cnoidPosition:8
#: irsl_choreonoid.cnoid_util.cnoidRotation:3
#: irsl_choreonoid.cnoid_util.cnoidTranslation:3 of
msgid "4x4 homogeneous transformation matrix"
msgstr ""

#: irsl_choreonoid.cnoid_util.cnoidRotation:1 of
msgid "Extracting rotation part of 4x4 matrix"
msgstr ""

#: irsl_choreonoid.cnoid_util.cnoidRotation:6 of
msgid "3x3 matrix ( rotation part of cPosition )"
msgstr ""

#: irsl_choreonoid.cnoid_util.cnoidTranslation:1 of
msgid "Extracting translation part of 4x4 matrix"
msgstr ""

#: irsl_choreonoid.cnoid_util.cnoidTranslation:6 of
msgid "1x3 vector ( translation part of cPosition )"
msgstr ""

#: irsl_choreonoid.cnoid_util.fv:1 of
msgid "Simple function for making numpy.array"
msgstr ""

#: irsl_choreonoid.cnoid_util.fv:3 of
msgid "List will be passed to numpy.array"
msgstr ""

#: irsl_choreonoid.cnoid_util.fv:5 of
msgid "Keyword arguments will be passed to numpy.array"
msgstr ""

#: irsl_choreonoid.cnoid_util.fv:8 of
msgid "vector or matrix"
msgstr ""

#: irsl_choreonoid.cnoid_util.fv:11 of
msgid "This function just return numpy.array(args, **kwargs)"
msgstr ""

#: irsl_choreonoid.cnoid_util.fv:15 of
msgid "fv(0.1, 0.2, 0.3) => array([0, 1, 2])"
msgstr ""

#: irsl_choreonoid.cnoid_util.fv:17 of
msgid ""
"Just reducing the number of typing numpy.array([0.1, 0.2, 0.3]) => "
"fv(0.1, 0.2, 0.3)"
msgstr ""

#: irsl_choreonoid.cnoid_util.isInChoreonoid:3 of
msgid "True if this script running on python-console of Choreonoid"
msgstr ""

#: ../../module_irsl_choreonoid.rst:19
msgid "module irsl_choreonoid.cnoid_base"
msgstr "irsl_choreonoid.cnoid_base"

#: ../../module_irsl_choreonoid.rst:21
msgid ""
"https://github.com/IRSL-"
"tut/irsl_choreonoid/blob/main/python/irsl_choreonoid/cnoid_base.py"
msgstr ""

#: irsl_choreonoid.cnoid_base.loadProject:1 of
msgid "Loading project file (currend project may be changed)"
msgstr ""

#: irsl_choreonoid.cnoid_base.loadProject:3 of
msgid "filename of project file (.cnoid)"
msgstr ""

#: irsl_choreonoid.cnoid_base.getItemTreeView:1 of
msgid "DEPRECATED: use cnoid.Base.ItemTreeView.instance"
msgstr ""

#: irsl_choreonoid.cnoid_base.getRootItem:1 of
msgid "DEPRECATED: use cnoid.Base.RootItem.instance"
msgstr ""

#: irsl_choreonoid.cnoid_base.getOrAddWorld:1 of
msgid "Getting or creating WorldItem"
msgstr ""

#: irsl_choreonoid.cnoid_base.getOrAddWorld:3 of
msgid "name of WorldItem"
msgstr ""

#: irsl_choreonoid.cnoid_base.getOrAddWorld:6 of
msgid "added or found WorldItem"
msgstr ""

#: irsl_choreonoid.cnoid_base.addSimulator:1 of
msgid "Adding SimulatorItem"
msgstr ""

#: irsl_choreonoid.cnoid_base.addSimulator:3 of
msgid "world item, simulator should be created under this world"
msgstr ""

#: irsl_choreonoid.cnoid_base.addSimulator:5 of
msgid "name of SimulatorItem to be added"
msgstr ""

#: irsl_choreonoid.cnoid_base.addSimulator:8 of
msgid "Added SimulatorItem"
msgstr ""

#: irsl_choreonoid.cnoid_base.loadRobotItem:1 of
msgid "Load robot model and add it as a BodyItem"
msgstr ""

#: irsl_choreonoid.cnoid_base.loadRobotItem:3 of
msgid "filename (or path)"
msgstr ""

#: irsl_choreonoid.cnoid_base.loadRobotItem:5 of
msgid "name of loaded robot-model"
msgstr ""

#: irsl_choreonoid.cnoid_base.loadRobotItem:7 of
msgid "if True, WorldItem is added"
msgstr ""

#: irsl_choreonoid.cnoid_base.loadRobotItem:9 of
msgid "if True and world if False, loaded item is added to RootItem"
msgstr ""

#: irsl_choreonoid.cnoid_base.loadRobotItem:12 of
msgid "Loaded robot-model"
msgstr ""

#: irsl_choreonoid.cnoid_base.findItem:1 irsl_choreonoid.cnoid_base.findItems:1
#: of
msgid "Finding item in ItemTreeView"
msgstr ""

#: irsl_choreonoid.cnoid_base.findItem:3 irsl_choreonoid.cnoid_base.findItems:3
#: irsl_choreonoid.cnoid_base.findItemsByName:3 of
msgid "name of item to be searched"
msgstr ""

#: irsl_choreonoid.cnoid_base.findItem:6 of
msgid "found item (first one)"
msgstr ""

#: irsl_choreonoid.cnoid_base.findItems:6
#: irsl_choreonoid.cnoid_base.findItemsByClass:6
#: irsl_choreonoid.cnoid_base.findItemsByName:6 of
msgid "all found items which has the name"
msgstr ""

#: irsl_choreonoid.cnoid_base.findItemsByQuery:1 of
msgid "Finding item which is query returning True in ItemTreeView"
msgstr ""

#: irsl_choreonoid.cnoid_base.findItemsByQuery:3 of
msgid "Query function which rturns true if the item should be extracted"
msgstr ""

#: irsl_choreonoid.cnoid_base.findItemsByQuery:6 of
msgid "all found items that query returns True"
msgstr ""

#: irsl_choreonoid.cnoid_base.findItemsByName:1 of
msgid "Finding item with the same name in ItemTreeView"
msgstr ""

#: irsl_choreonoid.cnoid_base.findItemsByClass:1 of
msgid "Finding item with class given as the argument in ItemTreeView"
msgstr ""

#: irsl_choreonoid.cnoid_base.findItemsByClass:3 of
msgid "class of item to be searched"
msgstr ""

#: irsl_choreonoid.cnoid_base.removeItem:1 of
msgid "Removing item"
msgstr ""

#: irsl_choreonoid.cnoid_base.removeItem:3 of
msgid "item to be removed"
msgstr ""

#: irsl_choreonoid.cnoid_base.findBodyItem:1 of
msgid "Seaching BodyItem"
msgstr ""

#: irsl_choreonoid.cnoid_base.findBodyItem:3 of
msgid ""
"If type is str, searching BodyItem with the same name. If type is body, "
"searching BodyItem which has identical body"
msgstr ""

#: irsl_choreonoid.cnoid_base.findBodyItem:6 of
msgid "found BodyItem"
msgstr ""

#: irsl_choreonoid.cnoid_base.findRobot:1 of
msgid "DEPRECATED: use findBodyItem"
msgstr ""

#: irsl_choreonoid.cnoid_base.cameraPositionLookingFor:1 of
msgid ""
"Generating camera coordinates where designated direction is the camera's "
"optical axis"
msgstr ""

#: irsl_choreonoid.cnoid_base.cameraPositionLookingAt:3
#: irsl_choreonoid.cnoid_base.cameraPositionLookingFor:3 of
msgid "3D position of the camera"
msgstr ""

#: irsl_choreonoid.cnoid_base.cameraPositionLookingFor:5 of
msgid "Direction of the camera's optical axis"
msgstr ""

#: irsl_choreonoid.cnoid_base.cameraPositionLookingAt:7
#: irsl_choreonoid.cnoid_base.cameraPositionLookingFor:7 of
msgid "Up direction"
msgstr ""

#: irsl_choreonoid.cnoid_base.cameraPositionLookingAt:10
#: irsl_choreonoid.cnoid_base.cameraPositionLookingFor:10 of
msgid "Camera coordinates"
msgstr ""

#: irsl_choreonoid.cnoid_base.cameraPositionLookingFor:13 of
msgid "Refer cnoid.Util.SgCamera.positionLookingFor"
msgstr ""

#: irsl_choreonoid.cnoid_base.cameraPositionLookingAt:1 of
msgid "Generating camera coordinates looking at the point"
msgstr ""

#: irsl_choreonoid.cnoid_base.cameraPositionLookingAt:5 of
msgid "3D position wherer the camera's optical axis passes through"
msgstr ""

#: irsl_choreonoid.cnoid_base.cameraPositionLookingAt:13 of
msgid "Refer cnoid.Util.SgCamera.positionLookingAt"
msgstr ""

#: irsl_choreonoid.cnoid_base.saveImageOfScene:1 of
msgid "Saving scene as image file"
msgstr ""

#: irsl_choreonoid.cnoid_base.saveImageOfScene:3 of
msgid "Name of the file to be saved"
msgstr ""

#: irsl_choreonoid.cnoid_base.saveImageOfScene:6 of
msgid "Refer cnoid.Base.SceneWidget.saveImage"
msgstr ""

#: irsl_choreonoid.cnoid_base.currentSceneView:1 of
msgid "Returning the instance of SceneView"
msgstr ""

#: irsl_choreonoid.cnoid_base.currentSceneView:5 of
msgid "Current Instance of SceneView ( return cnoid.Base.SceneView.instance )"
msgstr ""

#: irsl_choreonoid.cnoid_base.currentSceneWidget:1 of
msgid "Returning the instance of SceneWidget"
msgstr ""

#: irsl_choreonoid.cnoid_base.currentSceneWidget:5 of
msgid ""
"Current Instance of SceneWidget ( return "
"cnoid.Base.SceneView.instance.sceneWidget )"
msgstr ""

#: irsl_choreonoid.cnoid_base.getCameraCoords:1 of
msgid "Returning camera position of current scene"
msgstr ""

#: irsl_choreonoid.cnoid_base.getCameraCoords:3
#: irsl_choreonoid.cnoid_base.getCameraCoordsParam:3 of
msgid "If true, getting camera's field of view"
msgstr ""

#: irsl_choreonoid.cnoid_base.getCameraCoords:5 of
msgid "OpenCV stype coordinates will be returned"
msgstr ""

#: irsl_choreonoid.cnoid_base.getCameraCoords:8 of
msgid "Tuple with camera coordinates and camera's filed of view"
msgstr ""

#: irsl_choreonoid.cnoid_base.setCameraCoords:1 of
msgid "Setting camera coordinates of current scene"
msgstr ""

#: irsl_choreonoid.cnoid_base.setCameraCoords:3 of
msgid "Camera's coordinates to be set"
msgstr ""

#: irsl_choreonoid.cnoid_base.setCameraCoords:5 of
msgid "Camera's filed of view to be set"
msgstr ""

#: irsl_choreonoid.cnoid_base.setCameraCoords:7 of
msgid "If True, rendering scene with updated camera position"
msgstr ""

#: irsl_choreonoid.cnoid_base.setCameraCoords:9 of
msgid "cds is OpenCV stype coordinates"
msgstr ""

#: irsl_choreonoid.cnoid_base.getCameraCoordsParam:1 of
msgid "Returning camera position of current scene (returning dictionary type)"
msgstr ""

#: irsl_choreonoid.cnoid_base.getCameraCoordsParam:6
#: irsl_choreonoid.cnoid_base.setCameraCoordsParam:3 of
msgid ""
"Dictionary can be read with irsl_choreonoid.robot_util.make_coordinates, "
"and added the keyword 'fov'"
msgstr ""

#: irsl_choreonoid.cnoid_base.setCameraCoordsParam:1 of
msgid "Setting camera coordinates of current scene (receiving dictionary type)"
msgstr ""

#: irsl_choreonoid.cnoid_base.getCameraMatrix:1 of
msgid "Getting camera matrix of this scene"
msgstr ""

#: irsl_choreonoid.cnoid_base.getCameraMatrix:3 of
msgid "Retuns:"
msgstr ""

#: irsl_choreonoid.cnoid_base.getCameraMatrix:4 of
msgid "numpy.array (3x3 matrix) : Camera Matrix"
msgstr ""

#: irsl_choreonoid.cnoid_base.setCameraMatrix:1 of
msgid "Setting camera matrix of this scene"
msgstr ""

#: irsl_choreonoid.cnoid_base.setCameraMatrix:3 of
msgid "Camera matrix to be set"
msgstr ""

#: irsl_choreonoid.cnoid_base.setCameraMatrix:5 of
msgid "Set width of this scene"
msgstr ""

#: irsl_choreonoid.cnoid_base.setCameraMatrix:7 of
msgid "Set height of this scene"
msgstr ""

#: irsl_choreonoid.cnoid_base.projectPoints:1
#: irsl_choreonoid.cnoid_base.unprojectPoints:1 of
msgid "Projecting 3D points to 2D points on image plane"
msgstr ""

#: irsl_choreonoid.cnoid_base.projectPoints:3
#: irsl_choreonoid.cnoid_base.unprojectPoints:3 of
msgid "List 3D points on world coordinates"
msgstr ""

#: irsl_choreonoid.cnoid_base.projectPoints:6
#: irsl_choreonoid.cnoid_base.unprojectPoints:6 of
msgid "List of projected points"
msgstr ""

#: irsl_choreonoid.cnoid_base.setBackgroundColor:1 of
msgid "Setting color of background"
msgstr ""

#: irsl_choreonoid.cnoid_base.setBackgroundColor:3 of
msgid "Vector with 3 elements. Eech element represents 'Red', 'Green', 'Blue'."
msgstr ""

#: irsl_choreonoid.cnoid_base.disableGrid:1 of
msgid "Disabling to show grids"
msgstr ""

#: irsl_choreonoid.cnoid_base.disableGrid:3 of
msgid "ID of plane to be disabled. 0\\: XY, 1\\: XZ, 2\\: YZ"
msgstr ""

#: irsl_choreonoid.cnoid_base.enableGrid:1 of
msgid "SHowing grids"
msgstr ""

#: irsl_choreonoid.cnoid_base.enableGrid:3 of
msgid "ID of plane to show. 0\\: XY, 1\\: XZ, 2\\: YZ"
msgstr ""

#: ../../module_irsl_choreonoid.rst:29
msgid "module irsl_choreonoid.make_shapes"
msgstr "irsl_choreonoid.make_shapes"

#: ../../module_irsl_choreonoid.rst:31
msgid ""
"https://github.com/IRSL-"
"tut/irsl_choreonoid/blob/main/python/irsl_choreonoid/make_shapes.py"
msgstr ""

#: irsl_choreonoid.make_shapes.extractShapes:1 of
msgid "Extracting SgShape from SceneGraph"
msgstr ""

#: irsl_choreonoid.make_shapes.extractDrawables:3
#: irsl_choreonoid.make_shapes.extractPlots:3
#: irsl_choreonoid.make_shapes.extractShapes:3 of
msgid "Root node to start searching"
msgstr ""

#: irsl_choreonoid.make_shapes.extractDrawables:5
#: irsl_choreonoid.make_shapes.extractPlots:5
#: irsl_choreonoid.make_shapes.extractShapes:5 of
msgid "Offset coordinates to extracted object"
msgstr ""

#: irsl_choreonoid.make_shapes.extractDrawables:8
#: irsl_choreonoid.make_shapes.extractPlots:8
#: irsl_choreonoid.make_shapes.extractShapes:8 of
msgid ""
"List of extracted objects which is tuple of object-instance and "
"coordinates of this object"
msgstr ""

#: irsl_choreonoid.make_shapes.extractPlots:1 of
msgid "Extracting SgPlot from SceneGraph"
msgstr ""

#: irsl_choreonoid.make_shapes.extractDrawables:1 of
msgid "Extracting drawables (SgShape, SgPlot, SgText) from SceneGraph"
msgstr ""

#: irsl_choreonoid.make_shapes.loadScene:1 of
msgid "Loading scene(wrl, scene, ...) file using cnoid.Util.SceneLoader"
msgstr ""

#: irsl_choreonoid.make_shapes.loadMesh:3
#: irsl_choreonoid.make_shapes.loadScene:3 of
msgid "File name to be loaded"
msgstr ""

#: irsl_choreonoid.make_shapes.loadMesh:5
#: irsl_choreonoid.make_shapes.loadScene:5 of
msgid "If fileUri is set, shapes will be set Uri for exporting files"
msgstr ""

#: irsl_choreonoid.make_shapes.loadMesh:7
#: irsl_choreonoid.make_shapes.loadScene:7
#: irsl_choreonoid.make_shapes.make3DAxis:25
#: irsl_choreonoid.make_shapes.make3DAxisBox:19
#: irsl_choreonoid.make_shapes.makeBox:9
#: irsl_choreonoid.make_shapes.makeCapsule:7
#: irsl_choreonoid.make_shapes.makeCone:7
#: irsl_choreonoid.make_shapes.makeCoords:17
#: irsl_choreonoid.make_shapes.makeCross:17
#: irsl_choreonoid.make_shapes.makeCylinder:7
#: irsl_choreonoid.make_shapes.makeElevationGrid:17
#: irsl_choreonoid.make_shapes.makeExtrusion:17
#: irsl_choreonoid.make_shapes.makeLines:13
#: irsl_choreonoid.make_shapes.makePoints:11
#: irsl_choreonoid.make_shapes.makeSphere:5
#: irsl_choreonoid.make_shapes.makeTetrahedron:15
#: irsl_choreonoid.make_shapes.makeText:9
#: irsl_choreonoid.make_shapes.makeTorus:11 of
msgid ""
"If True, the loaded scene is wrapped by "
"irsl_choreonoid.irsl_draw_object.coordsWrapper"
msgstr ""

#: irsl_choreonoid.make_shapes.loadMesh:9
#: irsl_choreonoid.make_shapes.loadScene:9
#: irsl_choreonoid.make_shapes.makeBox:11
#: irsl_choreonoid.make_shapes.makeCapsule:9
#: irsl_choreonoid.make_shapes.makeCone:9
#: irsl_choreonoid.make_shapes.makeCylinder:9
#: irsl_choreonoid.make_shapes.makeElevationGrid:19
#: irsl_choreonoid.make_shapes.makeExtrusion:19
#: irsl_choreonoid.make_shapes.makeSphere:7
#: irsl_choreonoid.make_shapes.makeTetrahedron:17
#: irsl_choreonoid.make_shapes.makeTorus:13 of
msgid "If True, instance of cnoid.Util.SgShape will be returned (ignore wrapped)"
msgstr ""

#: irsl_choreonoid.make_shapes.loadMesh:13
#: irsl_choreonoid.make_shapes.loadScene:13
#: irsl_choreonoid.make_shapes.make3DAxis:27
#: irsl_choreonoid.make_shapes.make3DAxisBox:21
#: irsl_choreonoid.make_shapes.makeBox:17
#: irsl_choreonoid.make_shapes.makeCapsule:13
#: irsl_choreonoid.make_shapes.makeCone:15
#: irsl_choreonoid.make_shapes.makeCoords:19
#: irsl_choreonoid.make_shapes.makeCross:19
#: irsl_choreonoid.make_shapes.makeCylinder:15
#: irsl_choreonoid.make_shapes.makeLineAlignedShape:15
#: irsl_choreonoid.make_shapes.makeLines:19
#: irsl_choreonoid.make_shapes.makePoints:17
#: irsl_choreonoid.make_shapes.makeSphere:13
#: irsl_choreonoid.make_shapes.makeTetrahedron:21
#: irsl_choreonoid.make_shapes.makeText:15
#: irsl_choreonoid.make_shapes.makeTorus:17 of
msgid "Keywords for generating material and mesh"
msgstr ""

#: irsl_choreonoid.make_shapes.loadMesh:16
#: irsl_choreonoid.make_shapes.loadScene:16 of
msgid ""
"Loaded scene as a node of SceneGraph or wrapped class for interactive "
"programming"
msgstr ""

#: irsl_choreonoid.make_shapes.loadMesh:1 of
msgid "Loading mesh file using cnoid.AssimpPlugin module"
msgstr ""

#: irsl_choreonoid.make_shapes.makeBox:1 of
msgid "Making 'Box' shape using cnoid.Util.MeshGenerator"
msgstr ""

#: irsl_choreonoid.make_shapes.makeBox:3 of
msgid "Length of x-axis, if y and z is None, making 'cube'"
msgstr ""

#: irsl_choreonoid.make_shapes.makeBox:5 of
msgid "Length of y-direction edge"
msgstr ""

#: irsl_choreonoid.make_shapes.makeBox:7 of
msgid "Length of z-direction edge"
msgstr ""

#: irsl_choreonoid.make_shapes.makeBox:15
#: irsl_choreonoid.make_shapes.makeCone:13
#: irsl_choreonoid.make_shapes.makeCylinder:13
#: irsl_choreonoid.make_shapes.makeElevationGrid:21
#: irsl_choreonoid.make_shapes.makeExtrusion:23
#: irsl_choreonoid.make_shapes.makeSphere:11 of
msgid "Image file-name of texture"
msgstr ""

#: irsl_choreonoid.make_shapes.make3DAxis:30
#: irsl_choreonoid.make_shapes.make3DAxisBox:24
#: irsl_choreonoid.make_shapes.makeBox:20
#: irsl_choreonoid.make_shapes.makeCapsule:16
#: irsl_choreonoid.make_shapes.makeCone:18
#: irsl_choreonoid.make_shapes.makeCoords:22
#: irsl_choreonoid.make_shapes.makeCross:22
#: irsl_choreonoid.make_shapes.makeCylinder:18
#: irsl_choreonoid.make_shapes.makeElevationGrid:28
#: irsl_choreonoid.make_shapes.makeExtrusion:28
#: irsl_choreonoid.make_shapes.makeLineAlignedShape:18
#: irsl_choreonoid.make_shapes.makeLines:22
#: irsl_choreonoid.make_shapes.makePoints:20
#: irsl_choreonoid.make_shapes.makeSphere:16
#: irsl_choreonoid.make_shapes.makeTetrahedron:24
#: irsl_choreonoid.make_shapes.makeText:18
#: irsl_choreonoid.make_shapes.makeTorus:20 of
msgid ""
"Created object as a node of SceneGraph or wrapped class for interactive "
"programming"
msgstr ""

#: irsl_choreonoid.make_shapes.makeBox:23
#: irsl_choreonoid.make_shapes.makeSphere:19 of
msgid "Origin of generated shape is the center of it"
msgstr ""

#: irsl_choreonoid.make_shapes.makeCylinder:1 of
msgid "Making 'Cylinder' shape using cnoid.Util.MeshGenerator"
msgstr ""

#: irsl_choreonoid.make_shapes.makeCylinder:3 of
msgid "Radius of the cylinder"
msgstr ""

#: irsl_choreonoid.make_shapes.makeCylinder:5 of
msgid "Height of the cylinder"
msgstr ""

#: irsl_choreonoid.make_shapes.makeCylinder:21 of
msgid ""
"Center circle with indicated radius on XZ-plane and sweep to both side "
"with half of height, along y-direction"
msgstr ""

#: irsl_choreonoid.make_shapes.makeSphere:1 of
msgid "Make 'Sphere' shape using cnoid.Util.MeshGenerator"
msgstr ""

#: irsl_choreonoid.make_shapes.makeSphere:3 of
msgid "Radius of the sphere"
msgstr ""

#: irsl_choreonoid.make_shapes.makeCone:1 of
msgid "Making 'Cone' shape using cnoid.Util.MeshGenerator"
msgstr ""

#: irsl_choreonoid.make_shapes.makeCone:3 of
msgid "Radius of the cone"
msgstr ""

#: irsl_choreonoid.make_shapes.makeCone:5 of
msgid "Height of the cone"
msgstr ""

#: irsl_choreonoid.make_shapes.makeCapsule:1 of
msgid "Makeing 'Capsule' shape using cnoid.Util.MeshGenerator"
msgstr ""

#: irsl_choreonoid.make_shapes.makeCapsule:3 of
msgid "Radius of the cupsule"
msgstr ""

#: irsl_choreonoid.make_shapes.makeCapsule:5 of
msgid "Height of the capsule"
msgstr ""

#: irsl_choreonoid.make_shapes.makeCapsule:19 of
msgid ""
"Similar dimensions to 'makeCylinder' (bottom cricle is at minus y, cone's"
" tip is at plus y)"
msgstr ""

#: irsl_choreonoid.make_shapes.makeTorus:1 of
msgid "Makeing 'Torus' shape using cnoid.Util.MeshGenerator"
msgstr ""

#: irsl_choreonoid.make_shapes.makeTorus:3 of
msgid "Outer radius of the torus"
msgstr ""

#: irsl_choreonoid.make_shapes.makeTorus:5 of
msgid "Radius of cross section"
msgstr ""

#: irsl_choreonoid.make_shapes.makeTorus:7 of
msgid "If beginAngle and endAngle is passed, part of whole torus is created"
msgstr ""

#: irsl_choreonoid.make_shapes.makeElevationGrid:1
#: irsl_choreonoid.make_shapes.makeExtrusion:1 of
msgid "Makeing 'Extrusion' shape using cnoid.Util.MeshGenerator"
msgstr ""

#: irsl_choreonoid.make_shapes.makeExtrusion:3
#: irsl_choreonoid.make_shapes.makeExtrusion:5
#: irsl_choreonoid.make_shapes.makeExtrusion:7
#: irsl_choreonoid.make_shapes.makeExtrusion:9
#: irsl_choreonoid.make_shapes.makeExtrusion:11
#: irsl_choreonoid.make_shapes.makeExtrusion:13
#: irsl_choreonoid.make_shapes.makeExtrusion:15 of
msgid "/ arg for cnoid.Util.MeshGenerator.Extrusion"
msgstr ""

#: irsl_choreonoid.make_shapes.makeExtrusion:25 of
msgid "Keywords for generating material, mesh, and makeExtrusionParam"
msgstr ""

#: irsl_choreonoid.make_shapes.makeElevationGrid:3 of
msgid "Dimension of x-direction / arg for cnoid.Util.MeshGenerator.ElevationGrid"
msgstr ""

#: irsl_choreonoid.make_shapes.makeElevationGrid:5 of
msgid "Dimension of z-direction / arg for cnoid.Util.MeshGenerator.ElevationGrid"
msgstr ""

#: irsl_choreonoid.make_shapes.makeElevationGrid:7 of
msgid ""
"X length is (xDimension - 1) x xSpacing / arg for "
"cnoid.Util.MeshGenerator.ElevationGrid"
msgstr ""

#: irsl_choreonoid.make_shapes.makeElevationGrid:9 of
msgid ""
"Z length is (zDimension - 1) x zSpacing / arg for "
"cnoid.Util.MeshGenerator.ElevationGrid"
msgstr ""

#: irsl_choreonoid.make_shapes.makeElevationGrid:11 of
msgid ""
"Size is ( xDimension x zDimension ) / arg for "
"cnoid.Util.MeshGenerator.ElevationGrid"
msgstr ""

#: irsl_choreonoid.make_shapes.makeElevationGrid:13
#: irsl_choreonoid.make_shapes.makeElevationGrid:15 of
msgid "/ arg for cnoid.Util.MeshGenerator.ElevationGrid"
msgstr ""

#: irsl_choreonoid.make_shapes.makeElevationGrid:25 of
msgid "Keywords for generating material, mesh, and makeElevationParam"
msgstr ""

#: irsl_choreonoid.make_shapes.makePoints:1 of
msgid "Makeing '3D point cloud' shape"
msgstr ""

#: irsl_choreonoid.make_shapes.makeLines:3
#: irsl_choreonoid.make_shapes.makePoints:3 of
msgid "N x 3 matrix (N is number of points)"
msgstr ""

#: irsl_choreonoid.make_shapes.makePoints:13 of
msgid ""
"If True, instance of cnoid.Util.SgPointSet will be returned (ignore "
"wrapped)"
msgstr ""

#: irsl_choreonoid.make_shapes.makeText:1 of
msgid "Makeing 'Text' shape"
msgstr ""

#: irsl_choreonoid.make_shapes.makeText:3 of
msgid "String to be displayed"
msgstr ""

#: irsl_choreonoid.make_shapes.makeLines:15
#: irsl_choreonoid.make_shapes.makeText:11 of
msgid "If True, instance of cnoid.Util.SgText will be returned (ignore wrapped)"
msgstr ""

#: irsl_choreonoid.make_shapes.makeLines:1 of
msgid "Makeing Lines"
msgstr ""

#: irsl_choreonoid.make_shapes.makeLines:5 of
msgid ""
"example, [ (0, 1), (2, 3) ] represents two lines, line0 is from point0 to"
" point1, line1 is from point2 to point3"
msgstr ""

#: irsl_choreonoid.make_shapes.makeTetrahedron:1 of
msgid "Making 'Tetrahedron' shape"
msgstr ""

#: irsl_choreonoid.make_shapes.make3DAxis:1 of
msgid "Makeing '3D-axis' shape using cylinder and cone"
msgstr ""

#: irsl_choreonoid.make_shapes.make3DAxisBox:1 of
msgid "Makeing '3D-axis' shape using box"
msgstr ""

#: irsl_choreonoid.make_shapes.makeCoords:1 of
msgid "Makeing '3D-axis' shape using line"
msgstr ""

#: irsl_choreonoid.make_shapes.makeCross:1 of
msgid "Makeing '3D-axis' shape using crossing line"
msgstr ""

#: irsl_choreonoid.make_shapes.makeLineAlignedShape:1 of
msgid "Makeing object which is aligned with a desginated line"
msgstr ""

#: irsl_choreonoid.make_shapes.makeLineAlignedShape:3 of
msgid "3D vector representing start-point of a line"
msgstr ""

#: irsl_choreonoid.make_shapes.makeLineAlignedShape:5 of
msgid "3D vector representing end-point of a line"
msgstr ""

#: irsl_choreonoid.make_shapes.makeLineAlignedShape:7 of
msgid "Size of generated object (radius or edge length)"
msgstr ""

#: irsl_choreonoid.make_shapes.makeLineAlignedShape:9 of
msgid "Type of Shape, 'box', 'cylinder', 'capsule', 'cone'"
msgstr ""

#: irsl_choreonoid.make_shapes.makeLineAlignedShape:13 of
msgid "If True, printing debug message"
msgstr ""

#: irsl_choreonoid.make_shapes.makeBoxFromBoundingBox:1 of
msgid "Making box with the same size and position passed bounding-box"
msgstr ""

#: irsl_choreonoid.make_shapes.makeBoxFromBoundingBox:5
#: irsl_choreonoid.make_shapes.makeBoxFromBoundingBox:7 of
msgid "Just passing to makeBox"
msgstr ""

#: irsl_choreonoid.make_shapes.makeBoxFromBoundingBox:9 of
msgid "Extra keyword arguments passing to makeBox"
msgstr ""

#: irsl_choreonoid.make_shapes.exportMesh:1 of
msgid "Exporting SgNode as a mesh file (using Assimp)"
msgstr ""

#: irsl_choreonoid.make_shapes.exportMesh:3
#: irsl_choreonoid.make_shapes.exportScene:3 of
msgid "File name to be saved"
msgstr ""

#: irsl_choreonoid.make_shapes.exportMesh:5
#: irsl_choreonoid.make_shapes.exportScene:5 of
msgid "Root node of scene to be saved"
msgstr ""

#: irsl_choreonoid.make_shapes.addUriToShape:1
#: irsl_choreonoid.make_shapes.exportScene:1 of
msgid "Exporting SgNode as .scen file"
msgstr ""

#: irsl_choreonoid.make_shapes.exportScene:9 of
msgid "Exporting mesh instead of primitive type"
msgstr ""

#: irsl_choreonoid.make_shapes.exportScene:11 of
msgid ""
"Extra keyword arguments for using to execute ''StdSceneWriter.<keyword> ="
" <value>''"
msgstr ""

#: irsl_choreonoid.make_shapes.addUriToShape:3 of
msgid "Root node of scene to be add uri"
msgstr ""

#: irsl_choreonoid.make_shapes.addUriToShape:5 of
msgid "Base name of uri"
msgstr ""

#: irsl_choreonoid.make_shapes.addUriToShape:7 of
msgid "Base uri to be add"
msgstr ""

#: irsl_choreonoid.make_shapes.addUriToShape:10 of
msgid "uri : {base_uri}/{base_name}_{counter}"
msgstr ""

#: ../../module_irsl_choreonoid.rst:39
msgid "module irsl_choreonoid.robot_util"
msgstr "irsl_choreonoid.robot_util"

#: ../../module_irsl_choreonoid.rst:41
msgid ""
"https://github.com/IRSL-"
"tut/irsl_choreonoid/blob/main/python/irsl_choreonoid/robot_util.py"
msgstr ""

#: irsl_choreonoid.robot_util.make_coordinates:1 of
msgid "Generating coordinates(cnoid.IRSLCoords.coordinates) from dictionary"
msgstr ""

#: irsl_choreonoid.robot_util.make_coordinates:3 of
msgid "dictionary of describing transformation"
msgstr ""

#: irsl_choreonoid.robot_util.make_coordinates:6 of
msgid "generated coordinates"
msgstr ""

#: irsl_choreonoid.robot_util.make_coordinates:9 of
msgid "If there is not valid keyword"
msgstr ""

#: irsl_choreonoid.robot_util.make_coords_map:1 of
msgid "Generating dictonary describing transformation"
msgstr ""

#: irsl_choreonoid.robot_util.make_coords_map:3
#: irsl_choreonoid.robot_util.make_translation_rotation:3 of
msgid "Transformation"
msgstr ""

#: irsl_choreonoid.robot_util.make_coords_map:6 of
msgid "Dictonary can be used by make_coordinates"
msgstr ""

#: irsl_choreonoid.robot_util.make_translation_rotation:1 of
msgid ""
"Generating dictonary describing transformation (using translation, "
"rotation)"
msgstr ""

#: irsl_choreonoid.robot_util.make_translation_rotation:5 of
msgid "Unit of length. 'm', 'mm', 'cm', or 'inch'"
msgstr ""

#: irsl_choreonoid.robot_util.make_translation_rotation:7 of
msgid "Unit of angle. If True, use degree, otherwise use radian"
msgstr ""

#: irsl_choreonoid.robot_util.make_translation_rotation:10 of
msgid "Dictonary can be used in .body"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder:1
#: irsl_choreonoid.draw_coords.DrawCoordsList:1
#: irsl_choreonoid.robot_util.IKWrapper:1
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector:1 of
msgid "Bases: :py:class:`object`"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper:1 of
msgid "Utility class for solving inverse-kinematics"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.__init__:1 of
msgid "robot model using this instance"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.__init__:3 of
msgid "name or instance of tip_link"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.__init__:5 of
msgid "coordinates of end-effector relative to tip_link"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.__init__:7
#: irsl_choreonoid.robot_util.IKWrapper.setJoints:3 of
msgid "list of joint name, index or instance"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.__init__:9 of
msgid "type of solver"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.__init__:14 of
msgid "Coordinates system"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.__init__:16 of
msgid ""
"world -> robot(root_link) -> (using joints) -> tip_link -> tip_to_eef -> "
"end-effector < -- > target-coords(world)"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.__init__:18 of
msgid ""
"Inverse-kinematics would be solved to make target-coords and end-effector"
" at the same position."
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.flush:1 of
msgid "Updating the robot in scene"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.updateDefault:1 of
msgid "Updating default values (using joints, default_pose, default_coords)"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.endEffector:1 of
msgid "Current 6DOF coordinates of end-effector"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.endEffector:3 of
msgid "coordinates of current end-effector"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.getEndEffector:1 of
msgid "Getting end-effector (function version of self.endEffector)"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.getEndEffector:3 of
msgid "ignored"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.getEndEffector:6 of
msgid "end-effector"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.resetJointWeights:1 of
msgid ""
"Reset current joint-list to default joint-list (reverting effects of "
"using setJoints)"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.setJoints:1 of
msgid "Adding or removing joints to/from using joint-list"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.setJoints:5 of
msgid "if True, joints are added, else joint are removed from using joint-list"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.setJoints:8 of
msgid "If wrong joint is passed"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:1 of
msgid "Top method to solve inverse-kinematics"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:3 of
msgid "target coordinates of inverse-kinematics"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:5 of
msgid ""
"if True, no modification (moving joint and root-link) to robot-model when"
" calculation of IK is failed"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:7 of
msgid "number of retrying solving IK"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:9 of
msgid "'6D', 'position', 'rotation', 'xyzRPY'"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:11 of
msgid "weight of constraint"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:13 of
msgid "'2D', 'planer', 'position', 'rotation'"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:15 of
msgid "weight of base movement"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:17 of
msgid "number of iteration"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:19 of
msgid "threshold for checking convergence"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:21 of
msgid "if True or number, adding noise to angle of joint before solving IK"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:23 of
msgid "if True, printing debug message"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:26
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.inverseKinematics:8
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.move:10
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.moveCoords:10
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rotate:12
#: irsl_choreonoid.robot_util.RobotModelWrapped.inverseKinematics:10 of
msgid "IK was success or not, and total count of calculation"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.inverseKinematics:31 of
msgid "constraint : [1,1,1, 1,1,1] base_type : [1,1,1, 1,1,1]"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.angleVector:1 of
msgid ""
"Returning current joint angle of self.robot "
"ロボット(self.robot)への関節角度の指定して現状の値を返す。"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.angleVector:4
#: irsl_choreonoid.robot_util.IKWrapper.default_pose:3 of
msgid "1 x len(self.default_joints) vector"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.angleVector:9 of
msgid ""
"1 x len(self.default_joints) vector "
"現在のロボットの状態で、各エレメントが関節角度になっているvector(numpy.array)。要素数はself.default_jointと同じ。"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.currentAngleVector:1 of
msgid "Returning current joint angle of self.robot"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.currentAngleVector:3
#: irsl_choreonoid.robot_util.IKWrapper.currentAngleVector:6 of
msgid "1 x len(self.current_joints) vector"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.currentAngleVector:9 of
msgid "self.current_joints would be changed by setJoints method"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.rootCoords:1 of
msgid "Setting and getting coordinates of rootLink"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.rootCoords:3 of
msgid "If argument is set, coordinates of rootLink is updated by it"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.rootCoords:6 of
msgid "coordinates of rootLink"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.resetPose:1 of
msgid "Resetting pose (angleVector and rootCoords)"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.resetPose:5 of
msgid "current angleVector"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.addNoise:1 of
msgid "addNoise(self, max_range = 0.1, joint_list = None):"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.addNoise:3 of
msgid "range of adding noise"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.addNoise:5 of
msgid "If argument is not set, self.default_joints would be used"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.robot:1 of
msgid "Robot model using this instance"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.robot:3 of
msgid "robot model"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.tip_link:1 of
msgid "Tip link (direct parent of end-effector)"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.tip_link:3 of
msgid "tip link"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.tip_to_eef:1 of
msgid "Transformation between origin of tip_link and end-effector"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.default_coords:3
#: irsl_choreonoid.robot_util.IKWrapper.tip_to_eef:3 of
msgid "Transformation to end-effector at tip_link coordinates"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.joint_weights:1 of
msgid "Weight of joints"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.joint_weights:3 of
msgid "weight of joints"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.current_joints:1 of
msgid "Current joint-list"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.current_joints:3 of
msgid "current_joints using IK, currentAngleVector"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.default_joints:1 of
msgid "Default joint-list (stored while initialization)"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.default_joints:3 of
msgid "default_joints"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.default_pose:1 of
msgid "AngleVector stored while initialization"
msgstr ""

#: irsl_choreonoid.robot_util.IKWrapper.default_coords:1 of
msgid "RootCoords stored while initialization"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped:1 of
msgid "Bases: :py:class:`~irsl_choreonoid.irsl_draw_object.coordsWrapper`"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped:1 of
msgid "RobotModel for programming Inteactively"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped:3 of
msgid "RobotModel is displayed as cnoid.Base.RobotItem"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.__init__:1 of
msgid "robot model using this class"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.registerNamedPose:1 of
msgid ""
"Registering named pose for using with "
"irsl_choreonoid.robot_util.RobotModelWrapped.setNamedPose"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.registerNamedPose:3
#: irsl_choreonoid.robot_util.RobotModelWrapped.setNamedPose:3 of
msgid "Name of registered pose"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.registerNamedPose:5 of
msgid ""
"Angle-vector to be able to pass "
"irsl_choreonoid.robot_util.RobotModelWrapped.angleVector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.registerNamedPose:7 of
msgid "Coordinates of Root"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.registerEndEffector:1 of
msgid ""
"Registering named pose for using with "
"irsl_choreonoid.robot_util.RobotModelWrapped.getLimb, etc."
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.registerEndEffector:3 of
msgid "Name of limb as registered end-effector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.registerEndEffector:5 of
msgid "Link which is direct parent of coordinates of end-effector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.registerEndEffector:7 of
msgid "Coordinates tip_link to end_effector represented on link's coordinate"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.registerEndEffector:11 of
msgid "str, nickname:str)) ) : Tuple of actual_name and nick_name"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector:1 of
msgid "EndEffector class for manipulating end-effector, limb, joint-group"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.__init__:1 of
msgid "Use RobotModelWrapped.registerEndEffector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rename:1 of
msgid "Renaming using registered nick-name"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rename:3 of
msgid "nick-name"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rename:6 of
msgid "actual name"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.endEffector:1 of
msgid ""
"Getting coordinate of the end-effector (return value is generated on "
"demand)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.endEffector:3 of
msgid "Coordinate of the end-effector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.IK:1 of
msgid "Getting IKWrapper instance using this EndEffector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.IK:3 of
msgid "IKWrapper instance using this EndEffector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.angleMap:1 of
msgid "Getting dictionary [ key='jointName', value=jointAngle ]"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.angleMap:3 of
msgid "Dictionary of key='jointName', value=jointAngle for joints in this Limb"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.inverseKinematics:1
#: of
msgid "Solving inverse kinematic on this limb"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.inverseKinematics:3
#: irsl_choreonoid.robot_util.RobotModelWrapped.inverseKinematics:3 of
msgid "Coordinate of the target"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.inverseKinematics:5
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.move:7
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.moveCoords:7
#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rotate:9
#: irsl_choreonoid.robot_util.RobotModelWrapped.inverseKinematics:7 of
msgid "Just passing to IKWrapper"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.move:1 of
msgid "Relative moving end-effector linearly by translation vector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.move:3 of
msgid "Translation vector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.move:5 of
msgid "Just passing to cnoid.IRSLCoords.coordinates.translate"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rotate:1 of
msgid "Relative moving end-effector angularly by angle-axis"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rotate:3 of
msgid "Rotation angle"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rotate:5 of
msgid "Rotation axis"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.rotate:7 of
msgid "Just passing to cnoid.IRSLCoords.coordinates.rotate"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.moveCoords:1 of
msgid "Relative moving end-effector by transformation of coordinates"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.moveCoords:3 of
msgid "Relative coordinates"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.moveCoords:5 of
msgid "Just passing to cnoid.IRSLCoords.coordinates.transform"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.jointAngle:1 of
msgid "Setting or getting angle of the joint (limb version)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.jointAngle:3 of
msgid "Name of a joint, 'nickname' is acceptable."
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.jointAngle:5
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointAngle:5 of
msgid "Angle [radian] to be set"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.jointAngle:8
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointAngle:8 of
msgid "Angle of the joint, if do not find the name, None would be returned"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.setAngleMap:1 of
msgid "Setting angles of the joint (limb version)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.setAngleMap:3
#: irsl_choreonoid.robot_util.RobotModelWrapped.setAngleMap:3 of
msgid ""
"Keyword is a joint name and value is a joint angle. 'nickname' is "
"acceptable."
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.setAngleMap:6
#: irsl_choreonoid.robot_util.RobotModelWrapped.setAngleMap:6 of
msgid "If angles is set, returns True"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.angleVector:1 of
msgid "Setting or getting angle-vector (limb version)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.angleVector:3
#: irsl_choreonoid.robot_util.RobotModelWrapped.angleVector:3 of
msgid "Vector of angle[radian] to be set"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.EndEffector.angleVector:6
#: irsl_choreonoid.robot_util.RobotModelWrapped.angleVector:6 of
msgid "Vector of angle[radian]"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.robot:1 of
msgid "Robot-model using wrapped by this instance"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.robot:3 of
msgid "Instance of robot model currently using"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.setMode:1 of
msgid "Set updating mode"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.setMode:3 of
msgid ""
"Mode to be set (0\\: kinematics mode, 1\\: rendering mode, 2\\: rendering"
" immediately mode)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.setMode:6 of
msgid ""
"Current mode (0\\: kinematics mode, 1\\: rendering mode, 2\\: rendering "
"immediately mode, -1\\: do nothing while hook)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.linkList:1
#: irsl_choreonoid.robot_util.RobotModelWrapped.linkList:3 of
msgid "List of links"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.linkNames:1
#: irsl_choreonoid.robot_util.RobotModelWrapped.linkNames:3 of
msgid "List of link names"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.jointList:1
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointList:3 of
msgid "List of joints"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.jointNames:1
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointNames:3 of
msgid "List of joint names"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceList:1
#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceList:3 of
msgid "List of devices"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceNames:1
#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceNames:3 of
msgid "List of device names"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.link:1 of
msgid "Instance of the link"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.link:3
#: irsl_choreonoid.robot_util.RobotModelWrapped.linkCoords:3 of
msgid "name or index of the link"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.link:6 of
msgid "instance of the link"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.joint:1 of
msgid "Instance of the joint"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.joint:3
#: irsl_choreonoid.robot_util.RobotModelWrapped.jointCoords:3 of
msgid "name or index of the joint"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.joint:6 of
msgid "instance of the joint"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.device:1 of
msgid "Instance of the device"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.device:3
#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceCoords:3 of
msgid "name or index of the device"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.device:6 of
msgid "instance of the device"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.linkCoords:1 of
msgid "Coordinates of the link"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.linkCoords:6 of
msgid "coordinate of the link"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.jointCoords:1 of
msgid "Coordinates of the joint"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.jointCoords:6 of
msgid "coordinate of the joint"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceCoords:1 of
msgid "Coordinates of the device"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.deviceCoords:6 of
msgid "coordinate of the device"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.angleVector:1 of
msgid "Setting or getting angle-vector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.jointAngle:1 of
msgid "Setting or getting angle of the joint"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.jointAngle:3 of
msgid "Name of a joint"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.setAngleMap:1 of
msgid "Setting angles of the joint"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.rootCoords:1 of
msgid "Getting or setting coordinates of root link of robot"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.rootCoords:3 of
msgid "Coordinate to be set"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.rootCoords:6 of
msgid "Current coordinates of root link of robot"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.setDefaultPose:1
#: irsl_choreonoid.robot_util.RobotModelWrapped.setInitialPose:1 of
msgid "Setting default pose if registered"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.setNamedPose:1 of
msgid ""
"Setting named pose, name should be registered by "
"irsl_choreonoid.robot_util.RobotModelWrapped.registerNamedPose"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.getLimb:1 of
msgid ""
"Getting limb as end-effector, name should be registered by "
"irsl_choreonoid.robot_util.RobotModelWrapped.registerEndEffector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.getEndEffector:3
#: irsl_choreonoid.robot_util.RobotModelWrapped.getLimb:3 of
msgid "Name of registered limb as end-effector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.getLimb:6 of
msgid "Instance of EndEffector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.getLimb:9 of
msgid "If wrong limb name is passed"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.getEndEffector:1 of
msgid ""
"Getting coordinates of end-effector of limb (return value is generated on"
" demand)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.getEndEffector:6 of
msgid "Current coordinates of end-effector of limb"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.rleg:1 of
msgid "Pre defined accessor of limb, same as self.getLimb('rleg')"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.rleg:3 of
msgid "Instance of EndEffector (rleg)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.lleg:1 of
msgid "Pre defined accessor of limb, same as self.getLimb('lleg')"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.lleg:3 of
msgid "Instance of EndEffector (lleg)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.rarm:1 of
msgid "Pre defined accessor of limb, same as self.getLimb('rarm')"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.rarm:3 of
msgid "Instance of EndEffector (rarm)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.larm:1 of
msgid "Pre defined accessor of limb, same as self.getLimb('larm')"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.larm:3 of
msgid "Instance of EndEffector (larm)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.arm:1 of
msgid "Pre defined accessor of limb, same as self.getLimb('arm')"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.arm:3 of
msgid "Instance of EndEffector (arm)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.head:1 of
msgid "Pre defined accessor of limb, same as self.getLimb('head')"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.head:3 of
msgid "Instance of EndEffector (head)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.torso:1 of
msgid "Pre defined accessor of limb, same as self.getLimb('torso')"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.torso:3 of
msgid "Instance of EndEffector (torso)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.rlegEndEffector:1 of
msgid ""
"Pre defined accessor to end-effector, same as "
"self.getLimb('rleg').endEffector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.rlegEndEffector:3 of
msgid "Current coordinates of end-effector of limb(rleg)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.llegEndEffector:1 of
msgid ""
"Pre defined accessor to end-effector, same as "
"self.getLimb('lleg').endEffector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.llegEndEffector:3 of
msgid "Current coordinates of end-effector of limb(lleg)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.rarmEndEffector:1 of
msgid ""
"Pre defined accessor to end-effector, same as "
"self.getLimb('rarm').endEffector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.rarmEndEffector:3 of
msgid "Current coordinates of end-effector of limb(rarm)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.larmEndEffector:1 of
msgid ""
"Pre defined accessor to end-effector, same as "
"self.getLimb('larm').endEffector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.larmEndEffector:3 of
msgid "Current coordinates of end-effector of limb(larm)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.armEndEffector:1 of
msgid ""
"Pre defined accessor to end-effector, same as "
"self.getLimb('arm').endEffector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.armEndEffector:3 of
msgid "Current coordinates of end-effector of limb(arm)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.headEndEffector:1 of
msgid ""
"Pre defined accessor to end-effector, same as "
"self.getLimb('head').endEffector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.headEndEffector:3 of
msgid "Current coordinates of end-effector of limb(head)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.torsoEndEffector:1 of
msgid ""
"Pre defined accessor to end-effector, same as "
"self.getLimb('torso').endEffector"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.torsoEndEffector:3 of
msgid "Current coordinates of end-effector of limb(torso)"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.inverseKinematics:1 of
msgid "Solving inverse kinematic of the limb"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.inverseKinematics:5 of
msgid "Name of the limb"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.keepJointLimit:1 of
msgid "Setting mode to keep joint limits"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.keepJointLimit:6 of
msgid "Returns current settings"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.trimJointAngles:1 of
msgid "Force setting joint angles inside the range of limits"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.calcMinimumDuration:1 of
msgid "Calculating duration for the fastest movement depend on a joint limit"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.calcMinimumDuration:3 of
msgid "AngleVector to be moved to"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.calcMinimumDuration:5 of
msgid ""
"AngleVector to be moved from. If this argument is not given, current "
"angles will be used."
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.calcMinimumDuration:7 of
msgid "Result will be multipled by this value"
msgstr ""

#: irsl_choreonoid.robot_util.RobotModelWrapped.calcMinimumDuration:10 of
msgid "Duration [ second ]"
msgstr ""

#: ../../module_irsl_choreonoid.rst:49
msgid "module irsl_choreonoid.draw_coords"
msgstr "irsl_choreonoid.draw_coords"

#: ../../module_irsl_choreonoid.rst:51
msgid ""
"https://github.com/IRSL-"
"tut/irsl_choreonoid/blob/main/python/irsl_choreonoid/draw_coords.py"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList:1 of
msgid "Drawing list of coordinates"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.__init__:1 of
msgid "DrawCoordsList(initializer)"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.__init__:3 of
msgid "color of x-axis"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.__init__:5 of
msgid "color of y-axis"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.__init__:7 of
msgid "color of z-axis"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.__init__:9 of
msgid "length of axis"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.__init__:11 of
msgid "width of axis"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.count:1 of
msgid "Number of coords stored in this instance"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.count:3 of
msgid "current number of coords stored in this instance"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.T:1 of
msgid "Transformation matrix"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.T:3 of
msgid "4x4 matrix, homogeneous transformation matrix (cnoidPosition)"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.interface:1 of
msgid "Actual interface instance"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.interface:3 of
msgid "actual instance to draw lines"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.setOrigin:1 of
msgid "Setting new origin"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.setOrigin:3 of
msgid "new origin to be set"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.getOrigin:1 of
msgid "Getting current origin"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.getOrigin:5 of
msgid "current origin"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.setLineWidth:1 of
msgid "Set line width"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.setLineWidth:3 of
msgid "line width to be set"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.flush:1 of
msgid "Force rendering coords"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.clear:1 of
msgid "Clear all drawn coords"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.addCoords:1 of
msgid "Draw coordinates (3-axis, position and rotation)"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.addCoords:3
#: irsl_choreonoid.draw_coords.DrawCoordsList.addCross:3 of
msgid "coordinates to be drawn"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.addCoords:5
#: irsl_choreonoid.draw_coords.DrawCoordsList.addCross:5
#: irsl_choreonoid.draw_coords.DrawCoordsList.addPoint:5
#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.addObjects:5
#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.addPyObject:5
#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.removeObjects:5
#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.removePyObject:5 of
msgid "if True, rendering scene immediately"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.addCoords:8
#: irsl_choreonoid.draw_coords.DrawCoordsList.addCross:8
#: irsl_choreonoid.draw_coords.DrawCoordsList.addPoint:8 of
msgid "number of drawn coords"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.addCross:1 of
msgid "Draw cross (3-axis, line is crossing at center)"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.addPoint:1 of
msgid "Draw point (cross with no rotation)"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsList.addPoint:3 of
msgid "1x3 vector, point to be drawn"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsListWrapped:1 of
msgid ""
"Bases: :py:class:`~irsl_choreonoid.draw_coords.DrawCoordsList`, "
":py:class:`~irsl_choreonoid.irsl_draw_object.coordsWrapper`"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsListWrapped:1 of
msgid "Wrapped version of irsl_choreonoid.DrawCoordsList"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsListWrapped:3 of
msgid "Using for drawing coordinates interactively"
msgstr ""

#: irsl_choreonoid.draw_coords.DrawCoordsListWrapped.__init__:1
#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.__init__:1 of
msgid ""
"this is passing to irsl_choreonoid.robot_util.make_coordinates for making"
" initial_coords of coordsWrapper"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped:1 of
msgid ""
"Bases: :py:class:`~cnoid.DrawInterface.GeneralDrawInterface`, "
":py:class:`~irsl_choreonoid.irsl_draw_object.coordsWrapper`"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped:1 of
msgid "Wrapped version of cnoid.DrawInterface.GeneralDrawInterface"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped:3 of
msgid "Using for drawing SceneGraph objects interactively"
msgstr ""

#: ../../module_irsl_choreonoid.rst:63
msgid ""
"Generating instance of cnoid.Util.SgPosTransform, which represents the "
"root position of this instance"
msgstr ""

#: ../../module_irsl_choreonoid.rst:67
msgid "Returns:"
msgstr ""

#: ../../module_irsl_choreonoid.rst:67
msgid "Root of drawn objects in this instance at SceneGraph"
msgstr ""

#: ../../module_irsl_choreonoid.rst:69
msgid "Return Type:"
msgstr ""

#: ../../module_irsl_choreonoid.rst:70
msgid "cnoid.Util.SgPosTransform"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.flush:1 of
msgid "Force rendering scene"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.clear:1 of
msgid "Clear all added objects"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.clear:3 of
msgid "If it is False, the scene is not rendered"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.addObject:1 of
msgid "This method is overrided, just passing arguments to addPyObject"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.addObjects:1 of
msgid "Adding objects to be drawn"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.addObjects:3 of
msgid "list of objects to be drawn"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.removeObject:1 of
msgid "This method is overrided, just passing arguments to removePyObject"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.removeObjects:1 of
msgid "Removing objects to be drawn"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.removeObjects:3 of
msgid "list of objects to be removed"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.addPyObject:1 of
msgid "Adding object to be drawn"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.addPyObject:3 of
msgid "object to be drawn"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.removePyObject:1 of
msgid "Removing drawn object"
msgstr ""

#: irsl_choreonoid.draw_coords.GeneralDrawInterfaceWrapped.removePyObject:3 of
msgid "object to be removed"
msgstr ""

#: ../../module_irsl_choreonoid.rst:75
msgid "class coordsWrapper"
msgstr ""

#: ../../module_irsl_choreonoid.rst:76
msgid "Base class for using coordinates interactively."
msgstr ""

#: ../../module_irsl_choreonoid.rst:78
msgid ""
"Inherited by class DrawCoordsListWrapped and class "
"GeneralDrawInterfaceWrapped."
msgstr ""

#: ../../module_irsl_choreonoid.rst:80
msgid ""
"https://github.com/IRSL-"
"tut/irsl_choreonoid/blob/main/python/irsl_choreonoid/irsl_draw_object.py"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper:1 of
msgid "Bases: :py:class:`~cnoid.IRSLCoords.coordinates`"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper:1 of
msgid "class coordsWrapper(cnoid.IRSLCoords.coordinates)"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper:3 of
msgid ""
"This class aims to wrap a cnoid Object which have position "
"(SgPosTransform, Link, etc.)"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper:5 of
msgid ""
"You can access to this object with methods in "
"cnoid.IRSLCoords.coordinates,"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper:7 of
msgid ""
"Some mthods (newcoords, translate, rotate, transform) to update itself "
"are overrided to add calling callback_function."
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper:9 of
msgid "Then, you can run some process when the position of the target is updated."
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.__init__:1 of
msgid "wrapped target which have property 'T' for setting cnoidPosition"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.__init__:3 of
msgid "coordinates of this instance"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.__init__:5
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.setUpdateCallback:3 of
msgid "callback function which is called when target is updated"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.updateTarget:1 of
msgid "Updating self.target and call callback_function"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.setUpdateCallback:1 of
msgid "Setting callback function"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.newcoords:1 of
msgid "Wrapped method of newcoords in cnoid.IRSLCoords.coordinates"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.newcoords:3 of
msgid "replace pos and rot in self with cds"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.locate:8
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.move_to:8
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.newcoords:6
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient:10
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient_with_matrix:8
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate:10
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate_with_matrix:8
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.transform:8
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.translate:8 of
msgid "identical instance which was called with this method"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.translate:1 of
msgid "Wrapped method of translate in cnoid.IRSLCoords.coordinates"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.locate:3
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.translate:3 of
msgid "1x3 vector, translation vector"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.locate:5
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.move_to:5
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient:7
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient_with_matrix:5
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate:7
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate_with_matrix:5
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.transform:5
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.translate:5 of
msgid "Reference coordinates applying this method"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.locate:1 of
msgid "Wrapped method of locate in cnoid.IRSLCoords.coordinates"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate:1 of
msgid "Wrapped method of rotate in cnoid.IRSLCoords.coordinates"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient:3
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate:3 of
msgid "angle to rotate [radian]"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient:5
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate:5 of
msgid "1x3 vector, axis to rotate around"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient:1 of
msgid "Wrapped method of orient in cnoid.IRSLCoords.coordinates"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate_with_matrix:1 of
msgid "Wrapped method of rotate_with_matrix in cnoid.IRSLCoords.coordinates"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient_with_matrix:3
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.rotate_with_matrix:3 of
msgid "3x3 matrix, matrix applied to rotate"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.orient_with_matrix:1 of
msgid "Wrapped method of orient_with_matrix in cnoid.IRSLCoords.coordinates"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.transform:1 of
msgid "Wrapped method of transform in cnoid.IRSLCoords.coordinates"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.move_to:3
#: irsl_choreonoid.irsl_draw_object.coordsWrapper.transform:3 of
msgid "Transformation to be applied"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.move_to:1 of
msgid "Wrapped method of move_to in cnoid.IRSLCoords.coordinates"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.target:1 of
msgid ""
"Wrapped target of this instance, which was manipulated by methods of this"
" class"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.target:3 of
msgid "instance which have method 'T' to set cnoidPosition (4x4 matrix)"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.object:1 of
msgid ""
"Wrapped object of this instance, which was manipulated by methods of this"
" class"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.object:3 of
msgid "Utility slot set while initializing"
msgstr ""

#: irsl_choreonoid.irsl_draw_object.coordsWrapper.object:8 of
msgid ""
"target is a transformed target such as cnoid.Util.SgPosTransform object "
"is a utility slot for handling a child of the target (Shape, etc...)"
msgstr ""

#: ../../module_irsl_choreonoid.rst:88
msgid "module irsl_choreonoid.RobotBuilder"
msgstr "irsl_choreonoid.RobotBuilder"

#: ../../module_irsl_choreonoid.rst:90
msgid ""
"https://github.com/IRSL-"
"tut/irsl_choreonoid/blob/main/python/irsl_choreonoid/RobotBuilder.py"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder:1 of
msgid "Building robot interactively"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.body:1
#: irsl_choreonoid.RobotBuilder.RobotBuilder.body:3 of
msgid "Currently builded robot model"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.bodyItem:1
#: irsl_choreonoid.RobotBuilder.RobotBuilder.bodyItem:3 of
msgid "Currently displayed BodyItem"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.draw:1 of
msgid "DrawInterface for accessing raw-level display methods"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.draw:3 of
msgid "DrawInterface"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.hideRobot:1 of
msgid "Hiding robot model (uncheck RobotItem)"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.showRobot:1 of
msgid "Showing robot model (check RobotItem)"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.resetRobot:1 of
msgid "Resetting joint-angles of the robot"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.newRobot:1 of
msgid "Restarting with new robot(item)"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.newRobot:5 of
msgid "name of RobotItem"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.clear:1 of
msgid "Clearing showing geometries"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.objects:1 of
msgid "Getting list of shown objects"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.addShape:1 of
msgid "Adding a shape"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.addShape:3 of
msgid "Shape to be added"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.addShapes:1 of
msgid "Adding a shapes"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.addShapes:3 of
msgid "Shapes to be added"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.removeShape:1 of
msgid "Removing a shape"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.removeShape:3 of
msgid "Shape to be removed"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.removeShapes:1 of
msgid "Removing a shapes"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.removeShapes:3 of
msgid "Shapes to be removed"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.createLinkFromShape:1 of
msgid "Creating link from drawn shapes and appending to the other link"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.createLinkFromShape:21 of
msgid "Created link"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.viewInfo:1 of
msgid ""
"Showing information of links. (joint-type, joint-axis, mass, center-of-"
"mass, inertia) :param autoScale: :type autoScale: boolean, default=False "
":param \\*\\*kwargs:"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.viewInfo:6 of
msgid "Created shapes"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.notifyUpdate:1 of
msgid "Notifying update for redrawing robot-model and shapes"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.createJointShape:1 of
msgid "Creating and showing jointShape"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.createJointShape:14
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createVisualizedLinkShape:22
#: irsl_choreonoid.RobotBuilder.RobotBuilder.loadMesh:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.loadScene:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.make3DAxis:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.make3DAxisBox:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeBox:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCapsule:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCone:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCoords:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCross:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCylinder:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeElevationGrid:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeExtrusion:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeLineAlignedShape:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeSphere:6
#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeTorus:6 of
msgid "Created shape"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.createLink:1 of
msgid "Creating a link"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.createLink:21
#: irsl_choreonoid.RobotBuilder.RobotBuilder.createRootLink:5 of
msgid "Created Link"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.createRootLink:1 of
msgid "Creating a link and adding it as root-link"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.exportBody:1 of
msgid "Exporting created robot-model to file as .body file"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.exportBody:3
#: irsl_choreonoid.RobotBuilder.RobotBuilder.exportURDF:3 of
msgid "Name of file"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.exportBody:7 of
msgid ""
"0:EmbedModels, 1:LinkToOriginalModelFiles, 2:ReplaceWithStdSceneFiles, "
"3:ReplaceWithObjModelFiles"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.exportURDF:1 of
msgid "Exporting created robot-model to file as .urdf file"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.loadScene:1 of
msgid "Loading scene as a shape, see irsl_choreonoid.make_shapes.loadScene"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.loadMesh:1 of
msgid "Loading mesh as a shape, see irsl_choreonoid.make_shapes.loadMesh"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeBox:1 of
msgid "Making box shape, see irsl_choreonoid.make_shapes.makeBox"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCylinder:1 of
msgid "Making cylinder shape, see irsl_choreonoid.make_shapes.makeCylinder"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeSphere:1 of
msgid "Making sphere shape, see irsl_choreonoid.make_shapes.makeSphere"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCone:1 of
msgid "Making cone shape, see irsl_choreonoid.make_shapes.makeCone"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCapsule:1 of
msgid "Making capsule shape, see irsl_choreonoid.make_shapes.makeCapsule"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeTorus:1 of
msgid "Making torus shape, see irsl_choreonoid.make_shapes.makeTorus"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeExtrusion:1 of
msgid "Making extrusion shape, see irsl_choreonoid.make_shapes.makeExtrusion"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeElevationGrid:1 of
msgid ""
"Making elevation-grid shape, see "
"irsl_choreonoid.make_shapes.makeElevationGrid"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.make3DAxis:1 of
msgid "Making 3D-axis shape, see irsl_choreonoid.make_shapes.make3DAxis"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.make3DAxisBox:1 of
msgid ""
"Making 3D-axis shape (type: box), see "
"irsl_choreonoid.make_shapes.make3DAxisBox"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCoords:1 of
msgid ""
"Making 3D-axis shape (type: line), see "
"irsl_choreonoid.make_shapes.makeCoords"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeCross:1 of
msgid ""
"Making 3D-axis shape (type: crossing-line), see "
"irsl_choreonoid.make_shapes.makeCross"
msgstr ""

#: irsl_choreonoid.RobotBuilder.RobotBuilder.makeLineAlignedShape:1 of
msgid ""
"Making shape which is aligned to designated line, see "
"irsl_choreonoid.make_shapes.makeLineAlignedShape"
msgstr ""

#~ msgid "irsl_choreonoid module"
#~ msgstr ""

#~ msgid "irsl_choreonoid.cnoid_util"
#~ msgstr ""

#~ msgid "irsl_choreonoid.robot_util"
#~ msgstr ""

#~ msgid "irsl_choreonoid.draw_coords"
#~ msgstr ""

#~ msgid "absolute path"
#~ msgstr ""

#~ msgid "Updating robot model"
#~ msgstr ""

#~ msgid "Returns current endEffector"
#~ msgstr ""

#~ msgid "resetJointWeights(self):"
#~ msgstr ""

#~ msgid "Args:"
#~ msgstr ""

#~ msgid "Returns:"
#~ msgstr ""

#~ msgid "Initial joint-list"
#~ msgstr ""

#~ msgid "Registering named pose for using with self.setNamedPose"
#~ msgstr ""

#~ msgid "Angle-vector to be able to pass self.angleVector()"
#~ msgstr ""

#~ msgid "Registering named pose for using with self.getLimb(), etc."
#~ msgstr ""

#~ msgid "str, nickname:str)) ) :"
#~ msgstr ""

#~ msgid "Setting named pose, name should be registered by self.registerNamedPose"
#~ msgstr ""

#~ msgid ""
#~ "Getting limb as end-effector, name "
#~ "should be registered by "
#~ "self.registerEndEffector"
#~ msgstr ""

#~ msgid ""
#~ "Rotation part of transformation ( RPY"
#~ " angle, real vector with 3 elements,"
#~ " roll [radian], pitch [radian], yaw "
#~ "[radian] )"
#~ msgstr ""

#~ msgid ""
#~ "Rotation part of transformation ( Angle"
#~ " axis, real vector with 4 elements,"
#~ " ax, ay, az, rotation-angle [radian]"
#~ " )"
#~ msgstr ""

#~ msgid "1x4 vector"
#~ msgstr ""

#~ msgid ""
#~ "Transformation matrix ( 4x4 homogeneous "
#~ "transformation matrix, using in Choreonoid "
#~ ")"
#~ msgstr ""

#~ msgid "4x4 matrix"
#~ msgstr ""

#~ msgid "Creating new instance with the same value of this instance"
#~ msgstr ""

#~ msgid "copy of this instance (created new instance)"
#~ msgstr ""

#~ msgid "Updating self transformation as an inverse transformation"
#~ msgstr ""

#~ msgid "Overloaded function."
#~ msgstr ""

#~ msgid ""
#~ "locate(self: cnoid.IRSLCoords.coordinates, vector: "
#~ "numpy.ndarray[numpy.float64[3, 1]], wrt: "
#~ "cnoid.IRSLCoords.coordinates.wrt = <wrt.local: 1>)"
#~ " -> cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid ""
#~ "locate(self: cnoid.IRSLCoords.coordinates, arg0: "
#~ "numpy.ndarray[numpy.float64[3, 1]], arg1: "
#~ "cnoid.IRSLCoords.coordinates) -> "
#~ "cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid "Calculating interpolated coordinates"
#~ msgstr ""

#~ msgid ""
#~ "parameter 0.0 to 1.0, if p == "
#~ "0.0, coords euqal to self is "
#~ "return. If p == 1.0, coords equal"
#~ " to c2 is return."
#~ msgstr ""

#~ msgid "target coordinates"
#~ msgstr ""

#~ msgid "precision"
#~ msgstr ""

#~ msgid "Interpolated coordinates"
#~ msgstr ""

#~ msgid ""
#~ "move_to(self: cnoid.IRSLCoords.coordinates, vector: "
#~ "cnoid.IRSLCoords.coordinates, wrt: "
#~ "cnoid.IRSLCoords.coordinates.wrt = <wrt.local: 1>)"
#~ " -> cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid ""
#~ "move_to(self: cnoid.IRSLCoords.coordinates, arg0: "
#~ "cnoid.IRSLCoords.coordinates, arg1: "
#~ "cnoid.IRSLCoords.coordinates) -> "
#~ "cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid ""
#~ "orient(self: cnoid.IRSLCoords.coordinates, theta: "
#~ "float, axis: numpy.ndarray[numpy.float64[3, 1]], "
#~ "wrt: cnoid.IRSLCoords.coordinates.wrt = <wrt.local:"
#~ " 1>) -> cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid ""
#~ "orient(self: cnoid.IRSLCoords.coordinates, arg0: "
#~ "float, arg1: numpy.ndarray[numpy.float64[3, 1]], "
#~ "arg2: cnoid.IRSLCoords.coordinates) -> "
#~ "cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid ""
#~ "orient(self: cnoid.IRSLCoords.coordinates, arg0: "
#~ "float, arg1: numpy.ndarray[numpy.float64[3, 1]], "
#~ "arg2: numpy.ndarray[numpy.float64[3, 3], "
#~ "flags.c_contiguous]) -> cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid ""
#~ "orient_with_matrix(self: cnoid.IRSLCoords.coordinates, "
#~ "mat: numpy.ndarray[numpy.float64[3, 3], "
#~ "flags.c_contiguous], wrt: cnoid.IRSLCoords.coordinates.wrt"
#~ " = <wrt.local: 1>) -> "
#~ "cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid ""
#~ "orient_with_matrix(self: cnoid.IRSLCoords.coordinates, "
#~ "arg0: numpy.ndarray[numpy.float64[3, 3], "
#~ "flags.c_contiguous], arg1: cnoid.IRSLCoords.coordinates)"
#~ " -> cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid ""
#~ "orient_with_matrix(self: cnoid.IRSLCoords.coordinates, "
#~ "arg0: numpy.ndarray[numpy.float64[3, 3], "
#~ "flags.c_contiguous], arg1: numpy.ndarray[numpy.float64[3,"
#~ " 3], flags.c_contiguous]) -> "
#~ "cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid ""
#~ "Translation part ( real vector with "
#~ "3 elements, x, y, z ) of "
#~ "transformation matrix"
#~ msgstr ""

#~ msgid ""
#~ "Rotation part of transformation ( "
#~ "quaternion, real vector with 4 elements,"
#~ " x, y, z, w )"
#~ msgstr ""

#~ msgid "Rotation part of transformation ( Rotation matrix, 3x3 real matrix)"
#~ msgstr ""

#~ msgid ""
#~ "rotate_with_matrix(self: cnoid.IRSLCoords.coordinates, "
#~ "mat: numpy.ndarray[numpy.float64[3, 3], "
#~ "flags.c_contiguous], wrt: cnoid.IRSLCoords.coordinates.wrt"
#~ " = <wrt.local: 1>) -> "
#~ "cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid ""
#~ "rotate_with_matrix(self: cnoid.IRSLCoords.coordinates, "
#~ "arg0: numpy.ndarray[numpy.float64[3, 3], "
#~ "flags.c_contiguous], arg1: cnoid.IRSLCoords.coordinates)"
#~ " -> cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid ""
#~ "rotate_with_matrix(self: cnoid.IRSLCoords.coordinates, "
#~ "arg0: numpy.ndarray[numpy.float64[3, 3], "
#~ "flags.c_contiguous], arg1: numpy.ndarray[numpy.float64[3,"
#~ " 3], flags.c_contiguous]) -> "
#~ "cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid "Set transformation matrix (changing value of argument)"
#~ msgstr ""

#~ msgid "4x4 homogeneous transformation matrix, using in Choreonoid"
#~ msgstr ""

#~ msgid ""
#~ "setRPY(self: cnoid.IRSLCoords.coordinates, arg0: "
#~ "numpy.ndarray[numpy.float64[3, 1]]) -> None"
#~ msgstr ""

#~ msgid ""
#~ "setRPY(self: cnoid.IRSLCoords.coordinates, arg0: "
#~ "float, arg1: float, arg2: float) -> "
#~ "None"
#~ msgstr ""

#~ msgid ""
#~ "transformation(self: cnoid.IRSLCoords.coordinates, coords:"
#~ " cnoid.IRSLCoords.coordinates, wrt: "
#~ "cnoid.IRSLCoords.coordinates.wrt = <wrt.local: 1>)"
#~ " -> cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid ""
#~ "transformation(self: cnoid.IRSLCoords.coordinates, arg0:"
#~ " cnoid.IRSLCoords.coordinates, arg1: "
#~ "cnoid.IRSLCoords.coordinates) -> "
#~ "cnoid.IRSLCoords.coordinates"
#~ msgstr ""

#~ msgid "Members:"
#~ msgstr ""

#~ msgid "local"
#~ msgstr ""

#~ msgid "world"
#~ msgstr ""

#~ msgid "parent"
#~ msgstr ""

#~ msgid "Extracting x-axis of rotation matrix (1st column vector)"
#~ msgstr ""

#~ msgid "1x3 vector, x-axis of rotation matrix (1st column vector)"
#~ msgstr ""

#~ msgid "Extracting y-axis of rotation matrix (2nd column vector)"
#~ msgstr ""

#~ msgid "1x3 vector, y-axis of rotation matrix (2nd column vector)"
#~ msgstr ""

#~ msgid "Extracting z-axis of rotation matrix (3rd column vector)"
#~ msgstr ""

#~ msgid "1x3 vector, z-axis of rotation matrix (3rd column vector)"
#~ msgstr ""

#~ msgid ""
#~ "Generating instance of cnoid.Util.SgPosTransform,"
#~ " which represents the root position "
#~ "of this instance"
#~ msgstr ""

#~ msgid "root of objects in this instance at SceneGraph"
#~ msgstr ""

#~ msgid "Force rendering scene"
#~ msgstr ""

#~ msgid "This method is overrided, just passing arguments to addPyObject"
#~ msgstr ""

#~ msgid "This method is overrided, just passing arguments to removePyObject"
#~ msgstr ""

#~ msgid "Adding object to be drawn"
#~ msgstr ""

#~ msgid "object to be drawn"
#~ msgstr ""

#~ msgid "Removing drawn object"
#~ msgstr ""

#~ msgid "object to be removed"
#~ msgstr ""

#~ msgid ""
#~ "class "
#~ "GeneralDrawInterfaceWrapped(cnoid.DrawInterface.GeneralDrawInterface,"
#~ " irsl_choreonoid.irsl_draw_object.coordsWrapper):"
#~ msgstr ""

#~ msgid "Wrapped version of cnoid.DrawInterface.GeneralDrawInterface"
#~ msgstr ""

#~ msgid "Using for drawing SceneGraph objects interactively"
#~ msgstr ""

#~ msgid "Loading scene(wrl, scene, ...) file"
#~ msgstr ""

#~ msgid "Loading mesh file"
#~ msgstr ""

#~ msgid "make 'Box' shape"
#~ msgstr ""

#~ msgid "parse URL with IRSL original scheme"
#~ msgstr ""

#~ msgid "url [ url is like 'scheme://netloc/xxx/yyy/zzz' ]"
#~ msgstr ""

#~ msgid ""
#~ "{ cnoid.Util.SgPosTransform : HOGE "
#~ "irsl_choreonoid.irsl_draw_object.coordsWrapper : MOGE "
#~ "}"
#~ msgstr ""

#~ msgid "irsl_choreonoid.irsl_draw_object.coordsWrapper :"
#~ msgstr ""

#~ msgid "make 'Cylinder' shape"
#~ msgstr ""

#~ msgid "make 'Sphere' shape"
#~ msgstr ""

#~ msgid "make 'Cone' shape"
#~ msgstr ""

#~ msgid "make 'Capsule' shape"
#~ msgstr ""

#~ msgid "make 'Torus' shape"
#~ msgstr ""

#~ msgid "Raise:"
#~ msgstr ""

#~ msgid ""
#~ "DrawCoordsListWrapped(irsl_choreonoid.DrawCoordsList, "
#~ "irsl_choreonoid.irsl_draw_object.coordsWrapper):"
#~ msgstr ""

#~ msgid "__init__(self, \\*\\*kwargs):"
#~ msgstr ""

#~ msgid "Returns: list [cnoid.Body.Link] : List of links"
#~ msgstr ""

#~ msgid "Returns: list [cnoid.Body.Link] : List of joints"
#~ msgstr ""

#~ msgid ""
#~ "This class to wrap a cnoid Object"
#~ " which have position (SgPosTransform, Link,"
#~ " etc.)"
#~ msgstr ""

#~ msgid ""
#~ "Some mthods (newcoords, translate, rotate, "
#~ "transform) to update itself are "
#~ "overrided to call callback_function."
#~ msgstr ""

#~ msgid "Returns: list[float] : weight of joints"
#~ msgstr ""

#~ msgid "Returns: cnoid.Body.Body : Instance of robot model currently using"
#~ msgstr ""

#~ msgid "Returns: list [cnoid.Body.Link] : List of link"
#~ msgstr ""

#~ msgid "Returns: list [str] : List of link's name"
#~ msgstr ""

#~ msgid "Returns: list [cnoid.Body.Link] : List of joint"
#~ msgstr ""

#~ msgid "Returns: list [cnoid.Body.Link] : List of joint's name"
#~ msgstr ""

#~ msgid "Returns: list [cnoid.Body.Device] : List of device"
#~ msgstr ""

#~ msgid "Returns: list [cnoid.Body.Device] : List of device's name"
#~ msgstr ""

#~ msgid "Returns: int : current number of coords stored in this instance"
#~ msgstr ""

#~ msgid ""
#~ "Returns: numpy.array : 4x4 matrix, "
#~ "homogeneous transformation matrix (cnoidPosition)"
#~ msgstr ""

#~ msgid ""
#~ "Returns: cnoid.DrawInterface.DrawInterface : actual"
#~ " instance to draw lines"
#~ msgstr ""

#~ msgid ""
#~ "Generating instance of cnoid.Util.SgPosTransform,"
#~ " which represents the root position "
#~ "of this instance Returns:"
#~ msgstr ""

#~ msgid ""
#~ "cnoid.Util.SgPosTransform : Root of drawn "
#~ "objects in this instance at SceneGraph"
#~ msgstr ""

#~ msgid ""
#~ "Returns: cnoid.Util.SgPosTransform : Root of"
#~ " drawn objects in this instance at"
#~ " SceneGraph"
#~ msgstr ""

#~ msgid "Generating cnoid.Util.MeshGenerator.Extrusion"
#~ msgstr ""

#~ msgid "Generated result"
#~ msgstr ""

#~ msgid "Adding parameters by cnoid.Util.MeshGenerator.Extrusion"
#~ msgstr ""

#~ msgid "Generating cnoid.Util.MeshGenerator.ElevationGrid"
#~ msgstr ""

#~ msgid "Dimension of x-direction"
#~ msgstr ""

#~ msgid "Dimension of z-direction"
#~ msgstr ""

#~ msgid "X length is (xDimension - 1) x xSpacing"
#~ msgstr ""

#~ msgid "Z length is (zDimension - 1) x zSpacing"
#~ msgstr ""

#~ msgid "Size is ( xDimension x zDimension )"
#~ msgstr ""

#~ msgid "Adding parameters by cnoid.Util.MeshGenerator.ElevationGrid"
#~ msgstr ""

#~ msgid "angleVector stored while initialization"
#~ msgstr ""

#~ msgid "rootCoords stored while initialization"
#~ msgstr ""

#~ msgid "Mode to be set (0\\: kinematics mode, 1\\: rendering mode)"
#~ msgstr ""

#~ msgid "Current mode (0\\: kinematics mode, 1\\: rendering mode)"
#~ msgstr ""

#~ msgid ""
#~ "Current mode (0\\: kinematics mode, 1\\:"
#~ " rendering mode, 2\\: rendering immediately"
#~ " mode)"
#~ msgstr ""

#~ msgid "Writing created robot-model to file as .body file"
#~ msgstr ""

#~ msgid "Writing created robot-model to file as .urdf file"
#~ msgstr ""

#~ msgid "Args: rot (numpy.array) : 3x3 matrix, matrix applied to rotate"
#~ msgstr ""

#~ msgid ""
#~ "wrt (cnoid.IRSLCoords.coordinates.wrt or "
#~ "cnoid.IRSLCoords.coordinates, optional) : Reference"
#~ " coordinates applying this method"
#~ msgstr ""

