# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, IRSL-tut
# This file is distributed under the same license as the IRSL python modules
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: IRSL python modules \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-28 09:32+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../module_irsl_choreonoid_ros.rst:3
msgid "Modules in irsl_choreonoid_ros"
msgstr "irsl_choreonoid_ros モジュール"

#: ../../module_irsl_choreonoid_ros.rst:5
msgid "https://github.com/IRSL-tut/irsl_choreonoid_ros"
msgstr ""

#: ../../module_irsl_choreonoid_ros.rst:9
msgid "irsl_choreonoid_ros.cnoid_ros_util"
msgstr ""

#: ../../module_irsl_choreonoid_ros.rst:11
msgid ""
"https://github.com/IRSL-"
"tut/irsl_choreonoid_ros/blob/main/src/irsl_choreonoid_ros/cnoid_ros_util.py"
msgstr ""

#: irsl_choreonoid_ros.cnoid_ros_util.parseURLROS:1 of
msgid "Refere parseURL in irsl_choreonoid.cnoid_util"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.data
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.dataArray
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.getDevice
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.getDevicesByClass
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitData
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitDataArray
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextData
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextDataArray
#: irsl_choreonoid_ros.RobotInterface.JointInterface.getJointGroup
#: irsl_choreonoid_ros.RobotInterface.JointInterface.isFinished
#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleMap
#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleVector
#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleVectorSequence
#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngles
#: irsl_choreonoid_ros.RobotInterface.JointInterface.waitUntilFinish
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_on_map
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_position
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_trajectory
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_velocity
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.stop
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.waitFinishMoving
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.__init__
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.copyRobot
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.getActualRobotModel
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.getRobotModel
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.isRealRobot
#: irsl_choreonoid_ros.cnoid_ros_util.parseURLROS
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.__init__
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.buildEnvironment
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.buildEnvironmentFromYaml
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.createCnoid
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.createCnoidFromYaml
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setCnoidFromYaml
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setEnvironmentFromYaml
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.startSimulator of
msgid "Parameters"
msgstr ""

#: irsl_choreonoid_ros.cnoid_ros_util.parseURLROS:3 of
msgid "url"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.data
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.dataArray
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.deviceList
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.deviceNames
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.device_connected
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.device_initialized
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.getDevice
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.getDevicesByClass
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitData
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitDataArray
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextData
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextDataArray
#: irsl_choreonoid_ros.RobotInterface.JointInterface.getJointGroup
#: irsl_choreonoid_ros.RobotInterface.JointInterface.isFinished
#: irsl_choreonoid_ros.RobotInterface.JointInterface.jointGroupList
#: irsl_choreonoid_ros.RobotInterface.JointInterface.jointGroupNames
#: irsl_choreonoid_ros.RobotInterface.JointInterface.joint_connected
#: irsl_choreonoid_ros.RobotInterface.JointInterface.joint_initialized
#: irsl_choreonoid_ros.RobotInterface.JointInterface.waitUntilFinish
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.currentMapCoords
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.mobile_connected
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.mobile_initialized
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.waitFinishMoving
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.actualAngleVector
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.copyRobot
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.effortVector
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.getActualRobotModel
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.getRobotModel
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.jointRobot
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.referenceAngleVector
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.robot
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.velocityVector
#: irsl_choreonoid_ros.cnoid_ros_util.parseURLROS
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setCnoidFromYaml
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setEnvironmentFromYaml of
msgid "Returns"
msgstr ""

#: irsl_choreonoid_ros.cnoid_ros_util.parseURLROS:6 of
msgid "Absolute path"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.data
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.dataArray
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.deviceList
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.deviceNames
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.device_connected
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.device_initialized
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.getDevice
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.getDevicesByClass
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitData
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitDataArray
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextData
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextDataArray
#: irsl_choreonoid_ros.RobotInterface.JointInterface.getJointGroup
#: irsl_choreonoid_ros.RobotInterface.JointInterface.isFinished
#: irsl_choreonoid_ros.RobotInterface.JointInterface.jointGroupList
#: irsl_choreonoid_ros.RobotInterface.JointInterface.jointGroupNames
#: irsl_choreonoid_ros.RobotInterface.JointInterface.joint_connected
#: irsl_choreonoid_ros.RobotInterface.JointInterface.joint_initialized
#: irsl_choreonoid_ros.RobotInterface.JointInterface.waitUntilFinish
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.currentMapCoords
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.mobile_connected
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.mobile_initialized
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.waitFinishMoving
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.actualAngleVector
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.copyRobot
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.effortVector
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.getActualRobotModel
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.getRobotModel
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.jointRobot
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.referenceAngleVector
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.robot
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.velocityVector
#: irsl_choreonoid_ros.cnoid_ros_util.parseURLROS
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setCnoidFromYaml
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setEnvironmentFromYaml of
msgid "Return type"
msgstr ""

#: irsl_choreonoid_ros.cnoid_ros_util.parseURLROS:10 of
msgid "Examples"
msgstr ""

#: ../../module_irsl_choreonoid_ros.rst:19
msgid "irsl_choreonoid_ros.setup_cnoid"
msgstr ""

#: ../../module_irsl_choreonoid_ros.rst:21
msgid ""
"https://github.com/IRSL-"
"tut/irsl_choreonoid_ros/blob/main/src/irsl_choreonoid_ros/setup_cnoid.py"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface:1
#: irsl_choreonoid_ros.RobotInterface.JointInterface:1
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface:1
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid:1 of
msgid "Bases: :py:class:`object`"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid:1 of
msgid "Utility class for setting .cnoid file from python script"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.__init__:1 of
msgid "If set, it is used as root for creating environment"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.__init__:3 of
msgid "If set, it is used as a worldItem"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.buildEnvironment:1 of
msgid "Building environment (setting objects) under the WorldItem"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.buildEnvironment:3 of
msgid "value] ) : Dictionary for representing objects on environment"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.buildEnvironment:4 of
msgid "Name of WorldItem, added objects under this item"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.buildEnvironment:6 of
msgid "If True, creating new WorldItem"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.buildEnvironment:8 of
msgid "If True, set camera position"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.buildEnvironment:10 of
msgid "Offset of objects"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.createCnoid:1 of
msgid "Creating project from parameters"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.createCnoid:3 of
msgid "value] ) : Dictionary for representing the project"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.createCnoid:4 of
msgid "If True, adding new SimulatorItem if there is no instruction in info_dict"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.createCnoid:6 of
msgid "If True, adding new WorldItem if there is no instruction in info_dict"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.createCnoid:8 of
msgid "If True, not adding environment(objects). Use buildEnvironment method."
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.buildEnvironmentFromYaml:1 of
msgid "Building environment from yaml-file"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.buildEnvironmentFromYaml:3
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.createCnoidFromYaml:3
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setCnoidFromYaml:3
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setEnvironmentFromYaml:3 of
msgid "File name to load"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.buildEnvironmentFromYaml:5
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setEnvironmentFromYaml:5 of
msgid "Keyword to pass to setup_cnoid.buildEnvironment"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.createCnoidFromYaml:1 of
msgid "Creating project from yaml-file"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.createCnoidFromYaml:5
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setCnoidFromYaml:5 of
msgid "Keyword to pass to setup_cnoid.createCnoid"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setEnvironmentFromYaml:1 of
msgid "Setup environment from yaml-file (classmethod of buildEnvironmentFromYaml)"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setCnoidFromYaml:8
#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setEnvironmentFromYaml:8 of
msgid "Instance of setup_cnoid"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.setCnoidFromYaml:1 of
msgid "Setup project from yaml-file (classmethod of createCnoidFromYaml)"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.startSimulator:1 of
msgid "Starting simulation"
msgstr ""

#: irsl_choreonoid_ros.setup_cnoid.SetupCnoid.startSimulator:3 of
msgid "If True, simulator will run with realtime sync mode"
msgstr ""

#: ../../module_irsl_choreonoid_ros.rst:29
msgid "irsl_choreonoid_ros.RobotInterface"
msgstr ""

#: ../../module_irsl_choreonoid_ros.rst:31
msgid ""
"https://github.com/IRSL-"
"tut/irsl_choreonoid_ros/blob/main/src/irsl_choreonoid_ros/RobotInterface.py"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface:1 of
msgid "Interface for controlling locomotion of the robot"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.mobile_initialized:1
#: of
msgid "Initialized check of MobileBase"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.mobile_initialized:3
#: of
msgid "True returns, if MobileBase instance has been initialized"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.mobile_connected:1 of
msgid "Connection check of MobileBase"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.mobile_connected:3 of
msgid "True returns, if MobileBase instance has been connected"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.waitFinishMoving:1 of
msgid "Wait to finish moving of MobileBase"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.waitUntilFinish:8
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.waitFinishMoving:6 of
msgid "False returns, if timeout."
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.stop:1 of
msgid "Stop moving of MobileBase"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_velocity:1 of
msgid "Set moving velocity of MobileBase"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_velocity:3 of
msgid "Velocity of x-axis [ m/sec ]"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_velocity:5 of
msgid "Velocity of y-axis [ m/sec ]"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_velocity:7 of
msgid "Angular velocity of yaw [ radian/sec ]"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.currentMapCoords:1
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.currentMapCoords:5 of
msgid "Current robot's coordinate on the map"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.currentMapCoords:3
#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_trajectory:3 of
msgid "**Not implemented yet**"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_position:1 of
msgid ""
"Set target position for MobileBase, target is reletive to current robot's"
" coordinates"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_position:3 of
msgid "Target coordinates for moving (reletive to current robot's coordinates)"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_on_map:1 of
msgid ""
"Set target position on map for MobileBase, target is relative to map "
"coordinates"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_on_map:3 of
msgid "Target coordinates for moving (map coordinates)"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_trajectory:1 of
msgid "Set target trajectory for MobileBase"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_trajectory:5 of
msgid "List of pair of coordinates and time"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.MobileBaseInterface.move_trajectory:7 of
msgid "If True, trajectory is considered it is relative to robot's coordinates."
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface:1 of
msgid "Interface for controlling joints of the robot"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.joint_initialized:1 of
msgid "Initialized check of JointInterface"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.joint_initialized:3 of
msgid "True returns, if JointInterface instance has been initialized"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.joint_connected:1 of
msgid "Connection check of JointInterface"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.joint_connected:3 of
msgid "True returns, if JointInterface instance has been connected"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.jointGroupList:1 of
msgid "Getting list of instance of joint-group"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.jointGroupList:3 of
msgid "List of instance of joint-groups"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.jointGroupNames:1 of
msgid "Getting list of name of joint-groups"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.jointGroupNames:3 of
msgid "List of name of joint-groups"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.getJointGroup:1 of
msgid "Getting a instance of joint-group"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.getJointGroup:3 of
msgid "Name of joint-group"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.getJointGroup:6 of
msgid "Instance of joint-group"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngles:1 of
msgid "Sending angles of self.robot to the actual robot"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleMap:5
#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleVector:5
#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngles:3 of
msgid "Moving duration in second"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.isFinished:3
#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleMap:7
#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleVector:7
#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleVectorSequence:5
#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngles:5
#: irsl_choreonoid_ros.RobotInterface.JointInterface.waitUntilFinish:5 of
msgid "Name(s) of group to be used"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleVector:1 of
msgid ""
"Sending angle-vector to the actual robot. angle_vector is set to "
"self.robot"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleVector:3 of
msgid "Vector of angles of whole body"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleVector:9 of
msgid "Wait until finishing moveving"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleVector:11
#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleVectorSequence:9
#: of
msgid "Pass to waitUntilFinish"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleVectorSequence:1
#: of
msgid "List of vectors of angles"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleVectorSequence:3
#: of
msgid "List of moving durations in second"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleVectorSequence:7
#: of
msgid "wait until finishing move"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleMap:1 of
msgid "Sending angles to the actual robot. angles is set to self.robot"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.sendAngleMap:3 of
msgid "Dictionary, whose key is joint-name, and value is joint-angle"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.isFinished:1 of
msgid "Checking method for finishing to send angles"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.isFinished:6 of
msgid "If True, the robot is not moving"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.waitUntilFinish:1 of
msgid "Waiting until finishing joint moving"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.JointInterface.waitUntilFinish:3 of
msgid "Time for timeout"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface:1 of
msgid "Interface for receiving data from sensors on the robot"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.device_initialized:1 of
msgid "Initialized check of DeviceInterface"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.device_initialized:3 of
msgid "True returns, if DeviceInterface instance has been initialized"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.device_connected:1 of
msgid "Connection check of DeviceInterface"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.device_connected:3 of
msgid "True returns, if all devices in this instance have been connected"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.deviceList:1 of
msgid "Getting list of the instances for gathering data from the device"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.deviceList:3 of
msgid "List of the instances for gathering data"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.deviceNames:1 of
msgid "Getting list of name of the devices"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.deviceNames:3 of
msgid "List of name of the devices"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.getDevice:1 of
msgid "Getting the instance for gathering data from the device"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.data:3
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.dataArray:3
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.getDevice:3
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitData:3
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitDataArray:3
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextData:3
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextDataArray:3 of
msgid "Name of the device"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.getDevice:6 of
msgid "The instance witch has the same name as given name"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.getDevicesByClass:1 of
msgid "Getting the list of device which is a typical class"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.getDevicesByClass:3 of
msgid "Class of the device"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.getDevicesByClass:6 of
msgid "List of the instance whose class is subclass of cls"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.data:1 of
msgid "Getting data from the device"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.data:5
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.dataArray:5
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitData:7
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitDataArray:7
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextData:7
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextDataArray:7 of
msgid "Clear current-data"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.data:8
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.dataArray:8
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitData:10
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitDataArray:10
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextData:10
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextDataArray:10 of
msgid ""
"Data from the device. Type of a return value depends on type of the "
"devide."
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitData:1 of
msgid "Getting data, waiting if there is no current data"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitData:5
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitDataArray:5
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextData:5
#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextDataArray:5 of
msgid "Time out in second"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextData:1 of
msgid "Getting data, waiting until subscribing new data"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.dataArray:1 of
msgid "Getting list of data from devices"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitDataArray:1 of
msgid "Getting list of data, waiting if there is no current data"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.DeviceInterface.waitNextDataArray:1 of
msgid "Getting list of data, waiting until subscribing new data"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface:1 of
msgid ""
"Bases: :py:class:`~irsl_choreonoid_ros.RobotInterface.JointInterface`, "
":py:class:`~irsl_choreonoid_ros.RobotInterface.DeviceInterface`, "
":py:class:`~irsl_choreonoid_ros.RobotInterface.MobileBaseInterface`"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface:1 of
msgid ""
"Interface for controllring robot (inheriting classes JointInterface, "
"DeviceInterface and MobileBaseInterface)"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface:3 of
msgid ""
"At a instance of this interface, all methods in JointInterface, "
"DeviceInterface and MobileBaseInterface can be used."
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface:5 of
msgid "Then, please refer methods of these classes."
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.__init__:1 of
msgid "Name of setting.yaml file"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.__init__:3 of
msgid "Name of node"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.__init__:5 of
msgid "If True, ROS node will start with this node-name."
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.__init__:7 of
msgid "Wait until ROS connection has established"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.__init__:9 of
msgid "If false, create instace without ROS connection"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.getRobotModel:1 of
msgid ""
"Return an instance of RobotModel "
"(irsl_choreonoid.robot_util.RobotModelWrapped)"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.getActualRobotModel:3
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.getRobotModel:3 of
msgid "If True, model is generated as cnoid.BodyPlugin.BodyItem"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.getRobotModel:6 of
msgid "Newly generated instance"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.getActualRobotModel:1 of
msgid ""
"Return an instance of RobotModel "
"(irsl_choreonoid.robot_util.RobotModelWrapped) with RobotInterface "
"internal robot-model"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.getActualRobotModel:6 of
msgid "RobotModel created from RobotInterface internal robot-model"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.copyRobot:1 of
msgid "Return other instance of the robot model"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.copyRobot:5 of
msgid "Copy of self.robot (this is not identical to self.robot)"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.isRealRobot:1 of
msgid "Checking this interface working with a real robot"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.isRealRobot:5 of
msgid "Retuns:"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.isRealRobot:6 of
msgid ""
"boolean : If True, this interface connected to a real robot, otherwise "
"connected to simulator"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.effortVector:1 of
msgid "Return vector of effort of actual robot \\(sensing value\\)"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.actualAngleVector:3
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.effortVector:3
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.velocityVector:3 of
msgid "This method requires JointState class in devices"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.actualAngleVector:5
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.effortVector:5
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.referenceAngleVector:5
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.velocityVector:5 of
msgid "1 x N vector ( N is len(jointList) )"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.velocityVector:1 of
msgid "Return vector of velocity of actual robot \\(sensing value\\)"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.actualAngleVector:1 of
msgid "Return angle-vector of actual robot \\(sensing value\\)"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.referenceAngleVector:1 of
msgid "Return reference angle-vector \\(value of past command\\)"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.referenceAngleVector:3 of
msgid "This method requires JointTrajectoryState class in devices"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.robot:1 of
msgid "Return instance of the robot model (applying sensor values)"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.jointRobot:3
#: irsl_choreonoid_ros.RobotInterface.RobotInterface.robot:3 of
msgid "Instance of the robot model using in this instance"
msgstr ""

#: irsl_choreonoid_ros.RobotInterface.RobotInterface.jointRobot:1 of
msgid "Return instance of the robot model (using for sending command)"
msgstr ""

#~ msgid "irsl_choreonoid_ros module"
#~ msgstr ""

#~ msgid "Modules in irsl_choreonoidros"
#~ msgstr ""

#~ msgid "absolute path"
#~ msgstr ""

#~ msgid "Interface for controlling locomotion of robot"
#~ msgstr ""

#~ msgid "Add moving velocity of MobileBase"
#~ msgstr ""

#~ msgid "Set target position(relative) for MobileBase"
#~ msgstr ""

#~ msgid "Set target position on map for MobileBase"
#~ msgstr ""

#~ msgid "Interface for controlling joints of robot"
#~ msgstr ""

#~ msgid "Interface for receiving data from sensors on robot"
#~ msgstr ""

#~ msgid "Get data from the device"
#~ msgstr ""

#~ msgid "Wait if there is no current data"
#~ msgstr ""

#~ msgid "Wait until subscribing new data"
#~ msgstr ""

#~ msgid "Get data array from devices"
#~ msgstr ""

#~ msgid "The instance for gathering data"
#~ msgstr ""

#~ msgid "Name of setting file"
#~ msgstr ""

#~ msgid "Return instance of the robot model"
#~ msgstr ""

#~ msgid "Not implemented yet [TODO]"
#~ msgstr ""

#~ msgid ""
#~ "Return vector of effort of actual "
#~ "robot (sensing value) This method "
#~ "requires JointState class in devices"
#~ msgstr ""

#~ msgid ""
#~ "Return vector of velocity of actual "
#~ "robot (sensing value) This method "
#~ "requires JointState class in devices"
#~ msgstr ""

#~ msgid ""
#~ "Return angle-vector of actual robot "
#~ "(sensing value) This method requires "
#~ "JointState class in devices"
#~ msgstr ""

#~ msgid ""
#~ "Return reference angle-vector (value of"
#~ " past command) This method requires "
#~ "JointTrajectoryState class in devices"
#~ msgstr ""

#~ msgid "Return vector of effort of actual robot \\(sensing value\\)"
#~ msgstr ""

#~ msgid "1 x N vector ( N is len(jointList) )"
#~ msgstr ""

#~ msgid "Return vector of effort of actual robot **sensing value**"
#~ msgstr ""

#~ msgid "Returns:"
#~ msgstr ""

#~ msgid "cnoid.IRSLCoords.coordinates : Current robot's coordinate on the map"
#~ msgstr ""

#~ msgid "Args:"
#~ msgstr ""

#~ msgid ""
#~ "traj (list[(cnoid.IRSLCoords.coordinates, float)]) :"
#~ " List of pair of coordinates and "
#~ "time relative (boolean, default = False)"
#~ " : If True, trajectory is considered"
#~ " it is relative to robot's "
#~ "coordinates."
#~ msgstr ""

#~ msgid "Return vector of effort of actual robot, it's sensing value"
#~ msgstr ""

#~ msgid "numpy.array : 1 x N vector ( N is len(jointList) )"
#~ msgstr ""

#~ msgid "Name of group to be used"
#~ msgstr ""

#~ msgid "Vector of angles"
#~ msgstr ""

